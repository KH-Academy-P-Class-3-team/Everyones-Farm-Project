-- EveryonesFarm 테이블 생성 쿼리문 n차 수정

-- 이미 테이블이 생성되어 있는 사람들을 위한 테이블 삭제 명령문
 DROP SEQUENCE review_file_seq;
 DROP TABLE REVIEW_FILE;

 DROP SEQUENCE review_seq;
 DROP TABLE REVIEW;

 DROP SEQUENCE sell_answer_seq;
 DROP TABLE SELL_ANSWER;

 DROP SEQUENCE sell_question_seq;
 DROP TABLE SELL_QUESTION;
 
 DROP SEQUENCE basket_seq;
 DROP TABLE BASKET;

 DROP SEQUENCE TB_ORDER_seq;
 DROP TABLE TB_ORDER;

 DROP SEQUENCE product_option_seq;
 DROP TABLE PRODUCT_OPTION;

 DROP SEQUENCE product_file_seq;
 DROP TABLE PRODUCT_FILE;

 DROP SEQUENCE product_seq;
 DROP TABLE PRODUCT;

 DROP SEQUENCE answer_oneonone_seq; 
 DROP TABLE ANSWERED_ONEONONE;
 
 DROP SEQUENCE admin_seq;
 DROP TABLE ADMIN;

 DROP SEQUENCE question_oneonone_seq;
 DROP TABLE QUESTION_ONEONONE;

 DROP SEQUENCE farm_news_seq; 
 DROP TABLE FARM_NEWS;

 DROP SEQUENCE notice_seq;
 DROP TABLE NOTICE;
 
 DROP SEQUENCE ACTIVITY_SCHEDULE_SEQ;
 DROP TABLE FARM_ACTIVITY_SCHEDULE;

 DROP SEQUENCE farm_activity_file_seq;
 DROP TABLE FARM_ACTIVITY_FILE;

 DROP SEQUENCE application_seq;
 DROP TABLE APPLICATION;
   
 DROP SEQUENCE farm_activity_seq;
 DROP TABLE FARM_ACTIVITY;
 
 DROP SEQUENCE farming_dailylog_seq;
 DROP TABLE FARMING_DAILYLOG;
 
 DROP SEQUENCE farm_diary_file_seq;
 DROP TABLE FARM_DIARY_FILE;

 DROP SEQUENCE farm_diary_seq;
 DROP TABLE FARM_DIARY;
 
 DROP SEQUENCE farm_qna_answer_seq;
 DROP TABLE FARM_QNA_ANSWER;

 DROP SEQUENCE farm_qna_question_seq;
 DROP TABLE FARM_QNA_QUESTION;

 DROP SEQUENCE farm_file_seq;
 DROP TABLE FARM_FILE;

 DROP SEQUENCE farm_seq;
 DROP TABLE FARM;
 
 DROP SEQUENCE farmer_seq;
 DROP TABLE FARMER;
 
 DROP SEQUENCE user_profile_seq;
 DROP TABLE USER_PROFILE;

-- 없어진 테이블
-- DROP SEQUENCE user_address_seq;
-- DROP TABLE USER_ADDRESS;

 DROP SEQUENCE user_seq;
 DROP TABLE USER_TB;

-- commit;
-- 테이블 drop 잘 됐는지 이상 없는지 꼭 확인 --
-- ======================================================================================== --

--1. 일반 회원 데이터 정보를 저장하는 테이블(IS_LEAVE, IS_PAUSE default 값은 '0' 로!)		
--DROP TABLE USER_TB;

CREATE TABLE USER_TB
(
    USER_NO           NUMBER                NOT NULL,          -- 사용자 번호 
    USER_ID           VARCHAR2(100)         NOT NULL,          -- 사용자 아이디 
    USER_PW           VARCHAR2(100)         NOT NULL,          -- 사용자 비밀번호 
    USER_NAME         VARCHAR2(100)         NOT NULL,          -- 사용자 이름 
    EMAIL             VARCHAR2(150)         NOT NULL,          -- 사용자 이메일 
    PHONE             VARCHAR2(14)          NOT NULL,          -- 사용자 전화번호, 전화번호를 일반적으로 VARCHAR2(14)를 씁니다 01000000000 (11자리에 국가번호 3자리 때문에 보통 이런식으로 저장합니다.) 
    IS_LEAVE          NUMBER DEFAULT 0      NOT NULL,          -- 사용자 탈퇴 여부 
    IS_PAUSE          NUMBER DEFAULT 0      NOT NULL,          -- 사용자 활동 정지 여부 
    ZONECODE          VARCHAR2(7)           NULL,              -- 우편 번호 
    FIRST_ADDRESS     VARCHAR2(300 char)    NULL,              -- 주소(도로명 주소)
    SECOND_ADDRESS    VARCHAR2(300 char)    NULL,              -- 상세 주소 
    CONSTRAINT USER_TB_PK PRIMARY KEY (USER_NO)                -- 사용자 번호 기본키 제약조건
);

-- 주석

COMMENT ON TABLE USER_TB IS '일반 회원 데이터 정보를 저장하는 테이블(IS_LEAVE, IS_PAUSE default 값은 0 로!)';

COMMENT ON COLUMN USER_TB.USER_NO IS '일반 회원 번호';

COMMENT ON COLUMN USER_TB.USER_ID IS '일반 회원 아이디';

COMMENT ON COLUMN USER_TB.USER_PW IS '일반 회원 비밀번호';

COMMENT ON COLUMN USER_TB.USER_NAME IS '일반 회원 이름';

COMMENT ON COLUMN USER_TB.EMAIL IS '일반 회원 이메일';

COMMENT ON COLUMN USER_TB.PHONE IS '일반 회원 휴대전화';

COMMENT ON COLUMN USER_TB.IS_LEAVE IS '일반 회원 탈퇴 여부(1=탈퇴, 0= 탈퇴아님)';

COMMENT ON COLUMN USER_TB.IS_PAUSE IS '일반 회원 활동 정지 여부(1=활동정지, 0=활동중)';

COMMENT ON COLUMN USER_TB.ZONECODE IS '우편 번호';

COMMENT ON COLUMN USER_TB.FIRST_ADDRESS IS '주소(도로명)';

COMMENT ON COLUMN USER_TB.SECOND_ADDRESS IS '상세 주소';

-- 이상 없음

--일반 회원 데이터 정보를 저장하는 테이블(IS_LEAVE, IS_PAUSE default 값은 '0' 로!)	시퀀스 생성
--DROP SEQUENCE user_seq;
CREATE SEQUENCE user_seq;

-- 이상 없음

--2. 일반 회원의 주소 정보를 불러오는 테이블 --FK 사용자 번호	[사용하지 않는 테이블]
--DROP TABLE USER_ADDRESS;
--CREATE TABLE USER_ADDRESS
--(
--    ADDRESS_NO        NUMBER           NOT NULL,            -- 사용자 주소 번호
--    RECENT_DATE       DATE             NOT NULL,            -- 사용자 주소를 사용한 최근 날짜
--    COUNT             NUMBER           NOT NULL,            -- 사용자 주소 사용 횟수
--    FIRST_ADDRESS     VARCHAR2(300 char)     NOT NULL,      -- 사용자 첫번째 주소(API에서 검색된 주소), 2000은 너무 커서 저장공간이 낭비될 것 같아요 300으로 줄였습니다.
--    SECOND_ADDRESS    VARCHAR2(300 char)    NOT NULL,       -- 사용자 상세주소, FIRST_ADDRESS 와 같은 이유
--    ZONECODE          VARCHAR2(7)     NOT NULL,            -- 우편번호, 40 은 많이 커요 보통 VARCHAR2(7)로 설정해서 사용하더라고요.
--    USER_NO           NUMBER           NOT NULL,            -- 사용자번호(FK)
--    IS_FARMER         NUMBER DEFAULT 0  NOT NULL,           -- 농업인 사용자 여부 , DEFAULT 0 으로 설정
--    CONSTRAINT USER_ADDRESS_PK PRIMARY KEY (ADDRESS_NO)     -- ADDRESS_NO 기본키 설정
--);

-- USER_NO 외래키 설정 및 ON DELETE CASCADE 옵션 설정
-- user_no 가 farmer_no 일 수도 있기 때문에 이럴거면 하나의 테이블을 새로 만들거나 컬럼을 추가하거나 해야할 것 같은데 이 점은 강사님께 질문해볼게요
--ALTER TABLE USER_ADDRESS
--    ADD CONSTRAINT FK_USER_ADDRESS_USER_NO_USER_U FOREIGN KEY (USER_NO)
--        REFERENCES USER_TB (USER_NO)on delete cascade;

-- 일반 회원의 주소 정보를 불러오는 테이블 --FK 사용자 번호	시퀀스 생성
--DROP SEQUENCE user_address_seq;
--CREATE SEQUENCE user_address_seq;
-- 이상 없음

--3. 일반 회원이 프로필 사진을 변경할 때 이미지를 저장하는 테이블 --FK 사용자번호
--DROP TABLE USER_PROFILE;
CREATE TABLE USER_PROFILE
(
    PROFILE_NO     NUMBER           NOT NULL,               -- 사용자 프로필 번호 
    USER_NO        NUMBER           NOT NULL,               -- 사용자 번호(FK)
    ORIGIN_NAME    VARCHAR2(300)    NOT NULL,               -- 프로필 사진 원래 이름
    FILE_RENAME    VARCHAR2(300)    NOT NULL,               -- 프로필 사진 저장 이름(새로운 이름)
    SAVE_PATH      VARCHAR2(300)    NOT NULL,               -- 저장경로
    CONSTRAINT USER_PROFILE_PK PRIMARY KEY (PROFILE_NO)     -- PROFILE_NO 기본키 설정
);

COMMENT ON TABLE USER_PROFILE IS '일반 회원이 프로필 사진을 변경할 때 이미지를 저장하는 테이블 --FK 사용자번호';

COMMENT ON COLUMN USER_PROFILE.PROFILE_NO IS '프로필 사진 번호';

COMMENT ON COLUMN USER_PROFILE.USER_NO IS '사용자 번호';

COMMENT ON COLUMN USER_PROFILE.ORIGIN_NAME IS '프로필 사진  원래 파일명';

COMMENT ON COLUMN USER_PROFILE.FILE_RENAME IS '프로필 사진  저장 파일명';

COMMENT ON COLUMN USER_PROFILE.SAVE_PATH IS '프로필 사진  저장 경로';

-- 외래키 설정 및 ON DELETE CASCASE 옵션 설정
ALTER TABLE USER_PROFILE
    ADD CONSTRAINT FK_USER_PROFILE_USER_NO_USER_U FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO)on delete cascade;

-- 이상 없음

--일반 회원이 프로필 사진을 변경할 때 이미지를 저장하는 테이블 --FK 사용자번호 시퀀스 생성
--DROP SEQUENCE user_profile_seq;
CREATE SEQUENCE user_profile_seq;

-- 기본 조회 및 조인 연산 조회
--SELECT * FROM USER_PROFILE;
--SELECT u.*, uprofile.*
--FROM USER_TB u, USER_PROFILE uprofile
--WHERE u.USER_NO = uprofile.USER_NO;

-- 이상 없음

--4. 농부 회원 데이터 정보를 저장하는 테이블(IS_CONFIRM, IS_LEAVE, IS_PAUSE default 값은 '0')	
--DROP TABLE FARMER CASCADE CONSTRAINTS;
--DROP TABLE FARMER;
CREATE TABLE FARMER
(
    FARMER_NO         NUMBER                NOT NULL,            -- 농업인 사용자 번호 
    FARMER_ID         VARCHAR2(20)          NOT NULL,            -- 농입인 사용자 아이디 
    FARMER_PW         VARCHAR2(100)         NOT NULL,            -- 농입인 사용자 비밀번호 
    NAME              VARCHAR2(100 char)    NOT NULL,            -- 농입인 사용자 이름(일반 사용자 이름 컬럼이랑 통일할게요) 
    EMAIL             VARCHAR2(150)         NOT NULL,            -- 농입인 사용자 이메일(일반 사용자 이메일 컬럼이랑 통일할게요) 
    PHONE             VARCHAR2(14)          NOT NULL,            -- 농입인 사용자 전화번호(대표전화번호) 
    IS_CONFIRM        NUMBER DEFAULT 0      NOT NULL,            -- 농입인 사용자 승인여부(관리자가 승인해줘야 농업인 사용자로서 활동 가능, DEFAULT 0 설정, 1=승인완료) 
    IS_LEAVE          NUMBER DEFAULT 0      NOT NULL,            -- 농입인 사용자 탈퇴여부(DEFAULT 0 설정, 1=탈퇴) 
    IS_PAUSE          NUMBER DEFAULT 0      NOT NULL,            -- 농입인 사용자 활동정지여부(DEFAULT 0 설정, 1=활동정지) 
    ZONECODE          VARCHAR2(7)           NULL,                -- 농업인 사용자 우편 번호 
    FIRST_ADDRESS     VARCHAR2(300 char)    NULL,                -- 농업인 사용자 주소(도로명 주소) 
    SECOND_ADDRESS    VARCHAR2(300 char)    NULL,                -- 농업인 사용자 상세 주소 
    CONSTRAINT FARMER_PK PRIMARY KEY (FARMER_NO)       -- FARMER_NO 기본키 설정
);

COMMENT ON TABLE FARMER IS '농부 회원 데이터 정보를 저장하는 테이블(IS_CONFIRM, IS_LEAVE, IS_PAUSE default 값은 0)';

COMMENT ON COLUMN FARMER.FARMER_NO IS '농부 회원 번호';

COMMENT ON COLUMN FARMER.FARMER_ID IS '농부 회원 아이디';

COMMENT ON COLUMN FARMER.FARMER_PW IS '농부 회원 비밀번호';

COMMENT ON COLUMN FARMER.NAME IS '농부 회원 이름';

COMMENT ON COLUMN FARMER.EMAIL IS '농부 회원 이메일';

COMMENT ON COLUMN FARMER.PHONE IS '농부 회원 전화번호';

COMMENT ON COLUMN FARMER.IS_CONFIRM IS '농부 회원 승인 여부(1=승인완료, 0=승인보류)';

COMMENT ON COLUMN FARMER.IS_LEAVE IS '농부 회원 탈퇴 여부(1=탈퇴, 0=탈퇴아님)';

COMMENT ON COLUMN FARMER.IS_PAUSE IS '농부 회원 활동 정지 여부(1=활동정지, 0=활동중)';

COMMENT ON COLUMN FARMER.ZONECODE IS '우편 번호';

COMMENT ON COLUMN FARMER.FIRST_ADDRESS IS '주소(도로명)';

COMMENT ON COLUMN FARMER.SECOND_ADDRESS IS '상세 주소';

--농부 회원 데이터 정보를 저장하는 테이블(IS_CONFIRM, IS_LEAVE, IS_PAUSE default 값은 'N')	시퀀스 생성
--DROP SEQUENCE farmer_seq;
CREATE SEQUENCE farmer_seq;

-- 기본 조회 연산
--SELECT * FROM FARMER;

-- 이상 없음

--5. 농장을 등록하는 테이블 -- FK 농업인 사용자 번호(해당 농장의 주인)	
--DROP TABLE Farm CASCADE CONSTRAINTS;
-- DROP TABLE FARM;
CREATE TABLE FARM                               -- 이름 FARM 으로 수정(대문자로 수정)
(
    FARM_NO        NUMBER           NOT NULL,                   -- 농장 번호
    FARM_NAME      VARCHAR2(100 char)      NOT NULL,            -- 농장 이름(사용자 이름도 100인데 100으로 설정할게요)
    PHONE          VARCHAR2(14)      NOT NULL,                  -- 농장 대표 전화번호, 위에서 사용자 전화번호 컬럼과 같이 설정
    ZONECODE        VARCHAR2(7)    NOT NULL,                    -- 우편번호(사용자 주소 테이블과 같은 이유로 7로 설정)
    FIRST_ADDRESS        VARCHAR2(300 char)     NOT NULL,       -- 농장 첫번째 주소(API에서 받아온 값), 사용자 주소 테이블과 같은 컬럼 값으로 수정
    SECOND_ADDRESS        VARCHAR2(300 char)     NOT NULL,      -- 상세주소, 사용자 주소 테이블과 같은 컬럼 값으로 수정
    INTRODUCE      VARCHAR2(2000)    NOT NULL,                  -- 농장 소개
    FARM_REASON    VARCHAR2(2000)    NOT NULL,                  -- 가입 이유
    FARM_MIND      VARCHAR2(1000)    NOT NULL,                  -- 농부로써 가장 중요하다고 생각하는 것, 길게 작성하지 않을 것 같아서 VARCHAR2(2000) -> VARCHAR2(1000)으로 수정할게요
    FARM_SELL      VARCHAR2(1000)    NOT NULL,                  -- 농장에서 판매하는 것, 길게 작성하지 않을 것 같아서 VARCHAR2(2000) -> VARCHAR2(1000)으로 수정할게요
    VISIT          NUMBER           NOT NULL,                   -- 방문횟수
    FARMER_NO      NUMBER           NOT NULL,                   -- 농업인 사용자(FK)
    CONSTRAINT FARM_PK PRIMARY KEY (FARM_NO)                    -- FARM_NO 기본키 설정
);

COMMENT ON TABLE FARM IS '농장을 등록하는 테이블 -- FK 농업인 사용자 번호(해당 농장의 주인)';

COMMENT ON COLUMN FARM.FARM_NO IS '농장 번호';

COMMENT ON COLUMN FARM.FARM_NAME IS '농장명';

COMMENT ON COLUMN FARM.PHONE IS '농장 전화번호';

COMMENT ON COLUMN FARM.ZONECODE IS '농장 주소 우편번호';
COMMENT ON COLUMN FARM.FIRST_ADDRESS IS '농장 첫 번째 주소';
COMMENT ON COLUMN FARM.SECOND_ADDRESS IS '농장 상세 주소';

COMMENT ON COLUMN FARM.INTRODUCE IS '농장 소개';

COMMENT ON COLUMN FARM.FARM_REASON IS '농장 신청이유';

COMMENT ON COLUMN FARM.FARM_MIND IS '농장 마인드';

COMMENT ON COLUMN FARM.FARM_SELL IS '판매하려는 상품 설명';

COMMENT ON COLUMN FARM.VISIT IS '방문횟수';

COMMENT ON COLUMN FARM.FARMER_NO IS '농업인 사용자 번호(해당 농장의 주인)';

ALTER TABLE FARM
    ADD CONSTRAINT FK_Farm_FARMER_NO_FARMER_FARME FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO)on delete cascade;

-- 이상 없음

--농장을 등록하는 테이블 -- FK 농업인 사용자 번호(해당 농장의 주인)	시퀀스 생성 
--DROP SEQUENCE farm_seq;
CREATE SEQUENCE farm_seq;

-- 기본 조회 연산 및 조인 연산
--SELECT * FROM FARM;
--SELECT f.*, fuser.*
--FROM FARM f, FARMER fuser
--WHERE f.FARMER_NO = fuser.FARMER_NO;

-- 이상 없음

--6. 농장 파일을 등록하는 테이블 -- FK 농장 번호			
--DROP TABLE FARM_FILE;
CREATE TABLE FARM_FILE
(
    FARM_FILE_NO    NUMBER           NOT NULL,              -- 농장 파일 번호 
    FARM_NO         NUMBER           NOT NULL,              -- 농장 번호(FK)
    ORIGIN_NAME     VARCHAR2(300)    NOT NULL,              -- 농장 파일 원래 이름
    FILE_RENAME     VARCHAR2(300)    NOT NULL,              -- 농장 파일 저장된 이름(새로운 이름)
    SAVE_PATH       VARCHAR2(300)    NOT NULL,              -- 농장 파일 저장 경로
    IS_THUMBNAIL    NUMBER  DEFAULT 0   NOT NULL,           -- 농장 파일 썸네일 지정 DEFAULT 0(0 = 썸네일이 아니다, 1= 썸네일이다)
    CONSTRAINT FARM_FILE_PK PRIMARY KEY (FARM_FILE_NO)      -- FARM_FILE_NO 기본키 설정
);

COMMENT ON TABLE FARM_FILE IS '농장 파일을 등록하는 테이블 -- FK 농장 번호';

COMMENT ON COLUMN FARM_FILE.FARM_FILE_NO IS '이미지 번호';

COMMENT ON COLUMN FARM_FILE.FARM_NO IS '농장 번호';

COMMENT ON COLUMN FARM_FILE.ORIGIN_NAME IS '원래 이름';

COMMENT ON COLUMN FARM_FILE.FILE_RENAME IS '새로운 이름';

COMMENT ON COLUMN FARM_FILE.SAVE_PATH IS '경로';

COMMENT ON COLUMN FARM_FILE.IS_THUMBNAIL IS '농장 이미지 파일 썸네일 지정 DEFAULT 0(1= 썸네일)';

ALTER TABLE FARM_FILE
    ADD CONSTRAINT FK_FARM_FILE_FARM_NO_FARM_FARM FOREIGN KEY (FARM_NO)
        REFERENCES FARM (FARM_NO);
-- 이상 없음

--농장 파일을 등록하는 테이블 -- FK 농장 번호	 시퀀스 생성
--DROP SEQUENCE farm_file_seq;
CREATE SEQUENCE farm_file_seq;

-- 기본 연산 및 조인 연산
--SELECT * FROM FARM_FILE;
--SELECT f.*, ff.*
--FROM FARM f, FARM_FILE ff
--WHERE f.FARM_NO = ff.FARM_NO;

-- 이상 없음

--7. 농장 QnA 테이블 -- FK 작성자(사용자 번호) , 농장 번호	
--DROP TABLE FARM_QNA_QUESTION CASCADE CONSTRAINTS;
CREATE TABLE FARM_QNA_QUESTION
(
    FARM_QNA_QUESTION_NO    NUMBER                 NOT NULL,                     -- 농장 1대1문의 번호  
    USER_NO                 NUMBER                 NULL,                         -- 문의자 일반 사용자 번호(FK)
    FARMER_NO               NUMBER                 NULL,                         -- 문의자 농업인 사용자 번호(FK)
    FARM_NO                 NUMBER                 NOT NULL,                     -- 농장번호(FK)  
    TITLE                   VARCHAR2(100 char)     NOT NULL,                     -- 문의 제목  
    CONTENT                 VARCHAR2(2000 char)    NULL,                         -- 문의 내용, 글자수 대로 저장하도록 바꿨어요 
    REG_DATE                DATE DEFAULT sysdate   NOT NULL,                     -- 작성일 DEFATULT sysdate 수정 
    HITS                    NUMBER  DEFAULT 0      NOT NULL,                     -- 조회수 DEFAULT 0 수정 
    CONSTRAINT FARM_QNA_QUESTION_PK PRIMARY KEY (FARM_QNA_QUESTION_NO)           -- 기본키 설정
);

COMMENT ON TABLE FARM_QNA_QUESTION IS '농장 QnA 테이블 -- FK 작성자(사용자 번호), 농장 번호';

COMMENT ON COLUMN FARM_QNA_QUESTION.FARM_QNA_QUESTION_NO IS 'QnA 질문 번호';

COMMENT ON COLUMN FARM_QNA_QUESTION.USER_NO IS '작성자(사용자 번호)';

COMMENT ON COLUMN FARM_QNA_QUESTION.FARMER_NO IS '작성자(농업인 사용자 번호)';

COMMENT ON COLUMN FARM_QNA_QUESTION.FARM_NO IS '농장 번호';

COMMENT ON COLUMN FARM_QNA_QUESTION.TITLE IS '제목';

COMMENT ON COLUMN FARM_QNA_QUESTION.CONTENT IS '내용';

COMMENT ON COLUMN FARM_QNA_QUESTION.REG_DATE IS '작성일자';

COMMENT ON COLUMN FARM_QNA_QUESTION.HITS IS '조회수';

-- 외래키 설정
ALTER TABLE FARM_QNA_QUESTION                                               -- 문의자(일반 사용자)
    ADD CONSTRAINT FK_FARM_QNA_QUESTION_USER_NO_U FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO);

ALTER TABLE FARM_QNA_QUESTION                                               -- 농장 번호
    ADD CONSTRAINT FK_FARM_QNA_QUESTION_FARM_NO_F FOREIGN KEY (FARM_NO)
        REFERENCES FARM (FARM_NO);

ALTER TABLE FARM_QNA_QUESTION                                               -- 문의자(농업인 사용자)
    ADD CONSTRAINT FK_FARM_QNA_QUESTION_FARMER_NO FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO);

-- 이상 없음
--commit;
--농장 QnA 테이블 -- FK 작성자(사용자 번호) , 농장 번호 시퀀스 생성
--DROP SEQUENCE farm_qna_question_seq;
CREATE SEQUENCE farm_qna_question_seq;

-- 기본 연산 및 조인 연산
--SELECT * FROM FARM_QNA_QUESTION;
--SELECT u.*, ques.*
--FROM USER_TB u, FARM_QNA_QUESTION ques
--WHERE u.USER_NO = ques.USER_NO;

-- 이상 없음
        
--8. 농장 QnA 답변 테이블 -- FK 작성자(사용자 번호) , 농장 번호	
--DROP TABLE FARM_QNA_ANSWER;
CREATE TABLE FARM_QNA_ANSWER
(
    FARM_QNA_ANSWER_NO      NUMBER                 NOT NULL,                 -- 농장 1대1문의 답변 번호  
    TITLE                   VARCHAR2(100 char)     NOT NULL,                 -- 문의 답변 제목 
    CONTENT                 VARCHAR2(2000 char)    NOT NULL,                 -- 문의 답변 내용 , FARM_QNA_QUESTION 과 같은 이유로 VARCHAR2(2000 char) 로 수정 
    REG_DATE                DATE                   NOT NULL,                 -- 문의 답변 작성일 DEFAULT sysdate 수정 
    FARMER_NO               NUMBER                 NOT NULL,                 -- FARMER_NO(FK), 답변 작성자 
    FARM_QNA_QUESTION_NO    NUMBER                 NULL,                     -- 답변 대상 질문 번호(FK)  
    CONSTRAINT FARM_QNA_ANSWER_PK PRIMARY KEY (FARM_QNA_ANSWER_NO)           -- 기본키 설정
);

COMMENT ON COLUMN FARM_QNA_ANSWER.FARM_QNA_ANSWER_NO IS 'QNA 답변 번호';

COMMENT ON COLUMN FARM_QNA_ANSWER.TITLE IS '답변 제목';

COMMENT ON COLUMN FARM_QNA_ANSWER.CONTENT IS '답변 내용';

COMMENT ON COLUMN FARM_QNA_ANSWER.REG_DATE IS '작성 날짜';

COMMENT ON COLUMN FARM_QNA_ANSWER.FARMER_NO IS '답변 작성자번호';

COMMENT ON COLUMN FARM_QNA_ANSWER.FARM_QNA_QUESTION_NO IS 'QnA 질문 번호';

ALTER TABLE FARM_QNA_ANSWER                                                             -- 농업인 사용자 번호 외래키
    ADD CONSTRAINT FK_FARM_QNA_ANSWER_FARMER_NO_F FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO);

ALTER TABLE FARM_QNA_ANSWER                                                             -- 질문 번호 외래키
    ADD CONSTRAINT FK_FARM_QNA_ANSWER_FARM_QNA_QU FOREIGN KEY (FARM_QNA_QUESTION_NO)
        REFERENCES FARM_QNA_QUESTION (FARM_QNA_QUESTION_NO);

--농장 QnA 답변 테이블 -- FK 작성자(사용자 번호) , 농장 번호 시퀀스 생성
--DROP SEQUENCE farm_qna_answer_seq;
CREATE SEQUENCE farm_qna_answer_seq;

-- 이상 없음


--9. 농장 생활에 대한 블로그 형식의 일지 테이블				
--DROP TABLE FARM_DIARY CASCADE CONSTRAINTS;
-- DROP TABLE FARM_DIARY;
CREATE TABLE FARM_DIARY
(
    FARM_DIARY_NO    NUMBER                NOT NULL,        -- 농장 생활 일지 번호
    TITLE            VARCHAR2(200 char)    NOT NULL,        -- 농장 일기 제목 500자는 너무 길어서 200자로 수정 
    HIT              NUMBER                NOT NULL,        -- 농장 일기 조회수 
    ENROLL_DATE      DATE                  NOT NULL,        -- 농장 일기 등록일 
    YOUTUBE_LINK     VARCHAR(300)          NULL,            -- 농장 일기 유튜브 링크 
    CONTENT          CLOB                  NOT NULL,        -- 농장 일기 내용
    FARM_NO          NUMBER                NOT NULL,        -- 농장 번호(FK) 
    CONSTRAINT FARM_DIARY_PK PRIMARY KEY (FARM_DIARY_NO)    -- FARM_DIARY_NO 기본키 설정
);

COMMENT ON TABLE FARM_DIARY IS '농장 생활에 대한 블로그 형식의 일지 테이블';

COMMENT ON COLUMN FARM_DIARY.FARM_DIARY_NO IS '게시물 번호';

COMMENT ON COLUMN FARM_DIARY.TITLE IS '게시물 제목';

COMMENT ON COLUMN FARM_DIARY.HIT IS '조회수';

COMMENT ON COLUMN FARM_DIARY.ENROLL_DATE IS '게시물 등록 날짜';

COMMENT ON COLUMN FARM_DIARY.YOUTUBE_LINK IS '유튜브 링크 주소';

COMMENT ON COLUMN FARM_DIARY.CONTENT IS '게시물 내용';

COMMENT ON COLUMN FARM_DIARY.FARM_NO IS '농부회원 번호';

ALTER TABLE FARM_DIARY
    ADD CONSTRAINT FK_FARM_DIARY_FARM_NO_FARMER_F FOREIGN KEY (FARM_NO)
        REFERENCES FARMER (FARMER_NO) on delete cascade;

--농장 생활에 대한 블로그 형식의 일지 테이블 시퀀스 생성
--DROP SEQUENCE farm_diary_seq;
CREATE SEQUENCE farm_diary_seq;

-- 이상 없음

--10. 농장 생활에 대한 블로그 형식의 일에 들어가는 파일 테이블	
--DROP TABLE FARM_DIARY_FILE;
CREATE TABLE FARM_DIARY_FILE
(
    FARM_DIARY_FILE_NO    NUMBER           NOT NULL,                    -- 농장 일기 파일 번호 
    ORIGIN_NAME           VARCHAR2(300)    NOT NULL,                    -- 농장 일기 파일 원래 이름 
    FILE_RENAME           VARCHAR2(300)    NOT NULL,                    -- 농장 일기 파일 저장된 이름(새로운 이름) 
    SAVE_PATH             VARCHAR2(300)    NOT NULL,                    -- 농장 일기 파일 저장 경로 
    FARM_DAILY_NO         NUMBER           NOT NULL,                    -- 농장 일기 번호(FK) 
    IS_THUMBNAIL          NUMBER    DEFAULT 0   NOT NULL,               -- 썸네일 여부(1= 썸네일이다) 
    CONSTRAINT FARM_DIARY_FILE_PK PRIMARY KEY (FARM_DIARY_FILE_NO)      -- 기본키 설정
);

COMMENT ON TABLE FARM_DIARY_FILE IS '농장 생활에 대한 블로그 형식의 일에 들어가는 파일 테이블';

COMMENT ON COLUMN FARM_DIARY_FILE.FARM_DIARY_FILE_NO IS '일기 파일 번호';

COMMENT ON COLUMN FARM_DIARY_FILE.ORIGIN_NAME IS '원래 파일 명';

COMMENT ON COLUMN FARM_DIARY_FILE.FILE_RENAME IS '새로운 파일 명';

COMMENT ON COLUMN FARM_DIARY_FILE.SAVE_PATH IS '경로';

COMMENT ON COLUMN FARM_DIARY_FILE.FARM_DAILY_NO IS '게시물 번호';

COMMENT ON COLUMN FARM_DIARY_FILE.IS_THUMBNAIL IS '썸네일 여부(0 = 썸네일이 아니다, 1= 썸네일이다)';

ALTER TABLE FARM_DIARY_FILE
    ADD CONSTRAINT FK_FARM_DIARY_FILE_FARM_DAILY_ FOREIGN KEY (FARM_DAILY_NO)
        REFERENCES FARM_DIARY (FARM_DIARY_NO) on delete cascade;

--농장 생활에 대한 블로그 형식의 일에 들어가는 파일 테이블	시퀀스
--DROP SEQUENCE farm_diary_file_seq;
CREATE SEQUENCE farm_diary_file_seq;

-- 이상 없음

--11.  영농일지 정보 테이블 ---FK(작성자)		
--DROP TABLE FARMING_DAILYLOG;
CREATE TABLE FARMING_DAILYLOG
(
    DAILYLOG_NO       NUMBER                NOT NULL,           -- 영농일지 번호 
    FARMER_NO         NUMBER                NULL,               -- 농업인 사용자 번호 
    WRITE_DATE        DATE DEFAULT sysdate  NOT NULL,           -- 영농일지 작성일 DEFAULT sysdate 수정
    CONTENT           VARCHAR2(2000)        NOT NULL,           -- 영농일지 내용 
    WORKING_AMOUNT    VARCHAR2(100)         NOT NULL,           -- 영농일지 작업량 
    WORKING_TIME      VARCHAR2(20)          NOT NULL,           -- 영농일지 작업시간 
    WORKING_MEMBER    NUMBER                NOT NULL,           -- 영농일지 인원 
    WORKING_DATE      VARCHAR2(20)          NOT NULL,           -- 영농일지 작업 날짜 DATE -> VARCHAR2(20) 수정
    WEATHER           VARCHAR2(100 char)    NOT NULL,           -- 날씨 
    RAIN              NUMBER(5,1)           NOT NULL,           -- 강수량 
    MAX_TEMP          NUMBER(3,1)           NOT NULL,           -- 최고 온도 
    MIN_TEMP          NUMBER(3,1)           NOT NULL,           -- 최저 온도 
    CONSTRAINT FARMING_DAILYLOG_PK PRIMARY KEY (DAILYLOG_NO)    -- 기본키 설정
);

COMMENT ON TABLE FARMING_DAILYLOG IS '영농일지 정보 테이블 ---FK(작성자)';

COMMENT ON COLUMN FARMING_DAILYLOG.DAILYLOG_NO IS '일지 번호';

COMMENT ON COLUMN FARMING_DAILYLOG.FARMER_NO IS '작성자(회원 번호)';

COMMENT ON COLUMN FARMING_DAILYLOG.WRITE_DATE IS '작성 날짜';

COMMENT ON COLUMN FARMING_DAILYLOG.CONTENT IS '작업 내용';

COMMENT ON COLUMN FARMING_DAILYLOG.WORKING_AMOUNT IS '작업량';

COMMENT ON COLUMN FARMING_DAILYLOG.WORKING_TIME IS '작업 시간';

COMMENT ON COLUMN FARMING_DAILYLOG.WORKING_MEMBER IS '작업 인원';

COMMENT ON COLUMN FARMING_DAILYLOG.WORKING_DATE IS '작업 날짜';

COMMENT ON COLUMN FARMING_DAILYLOG.WEATHER IS '날씨';

COMMENT ON COLUMN FARMING_DAILYLOG.RAIN IS '강수량';

COMMENT ON COLUMN FARMING_DAILYLOG.MAX_TEMP IS '최고 기온';

COMMENT ON COLUMN FARMING_DAILYLOG.MIN_TEMP IS '최저 기온';

ALTER TABLE FARMING_DAILYLOG
    ADD CONSTRAINT FK_FARMING_DAILYLOG_FARMER_NO_ FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) on delete cascade;

-- 영농일지 정보 테이블 ---FK(작성자) 시퀀스 생성
--DROP SEQUENCE farming_dailylog_seq;
CREATE SEQUENCE farming_dailylog_seq;

-- 이상 없음

--12. 농장의 체험 활동(농장 체험/일손 돕기)에 대한 정보를 저장하는 테이블 --FK(농장 번호)		
--DROP TABLE FARM_ACTIVITY CASCADE CONSTRAINTS;
CREATE TABLE FARM_ACTIVITY
(
    ACTIVITY_NO     NUMBER           NOT NULL,              -- 체험 번호
    FARM_NO         NUMBER           NOT NULL,              -- 농장 번호(FK)
    TITLE           VARCHAR2(100 char)    NOT NULL,         -- 체험 제목 
    CONTENT         CLOB             NOT NULL,              -- 체험 내용 
    AVAIL_NUMBER    NUMBER           NOT NULL,              -- 체험 가능 인원 수 
    PRICE           NUMBER DEFAULT 0 NULL,                  -- 체험 요금 DEFAULT 0 설정
    IS_HELP         NUMBER DEFAULT 0 NOT NULL,              -- 일손돕기 여부(1=일손돕기) DEFAULT 0 설정 
    CONSTRAINT FARM_ACTIVITY_PK PRIMARY KEY (ACTIVITY_NO)   -- 기본키 설정
);
COMMENT ON TABLE FARM_ACTIVITY IS '농장의 체험 활동(농장 체험/일손 돕기)에 대한 정보를 저장하는 테이블 --FK(농장 번호)';

COMMENT ON COLUMN FARM_ACTIVITY.ACTIVITY_NO IS '체험 번호';

COMMENT ON COLUMN FARM_ACTIVITY.FARM_NO IS '농장 번호';

COMMENT ON COLUMN FARM_ACTIVITY.TITLE IS '체험명';

COMMENT ON COLUMN FARM_ACTIVITY.CONTENT IS '체험 내용';

COMMENT ON COLUMN FARM_ACTIVITY.AVAIL_NUMBER IS '체험 가능 인원';

COMMENT ON COLUMN FARM_ACTIVITY.PRICE IS '요금';

COMMENT ON COLUMN FARM_ACTIVITY.IS_HELP IS '일손돕기 체험인지 여부(1=일손돕기, 0=농장체험)';

ALTER TABLE FARM_ACTIVITY
    ADD CONSTRAINT FK_FARM_ACTIVITY_FARM_NO_Farm_ FOREIGN KEY (FARM_NO)
        REFERENCES Farm (FARM_NO)on delete cascade;

-- 이상 없음

--농장의 체험 활동(농장 체험/일손 돕기)에 대한 정보를 저장하는 테이블 --FK(농장 번호)	  시퀀스 생성
--DROP SEQUENCE farm_activity_seq;
CREATE SEQUENCE farm_activity_seq;

-- 이상 없음

-- 체험 하나의 일정을 저장하는 테이블
-- DROP TABLE FARM_ACTIVITY_SCHEDULE
CREATE TABLE FARM_ACTIVITY_SCHEDULE
(
    SCHEDULE_NO    NUMBER           NOT NULL,                           -- 스케줄 번호 
    ACTIVITY_NO    NUMBER           NULL,                               -- 체험 번호 외래키
    TIME           VARCHAR2(300)    NULL,                               -- 일정 시간
    CONTENT        VARCHAR2(500)    NULL,                               -- 일정 내용
    ETC            VARCHAR2(500)    NULL,                               -- 일정 비고
    CONSTRAINT FARM_ACTIVITY_SCHEDULE_PK PRIMARY KEY (SCHEDULE_NO)      -- 기본키 설정
);

COMMENT ON COLUMN FARM_ACTIVITY_SCHEDULE.SCHEDULE_NO IS '일정 번호';

COMMENT ON COLUMN FARM_ACTIVITY_SCHEDULE.ACTIVITY_NO IS '체험 번호';

COMMENT ON COLUMN FARM_ACTIVITY_SCHEDULE.TIME IS '체험 시간';

COMMENT ON COLUMN FARM_ACTIVITY_SCHEDULE.CONTENT IS '활동 내용';

COMMENT ON COLUMN FARM_ACTIVITY_SCHEDULE.ETC IS '비고';

ALTER TABLE FARM_ACTIVITY_SCHEDULE                                          -- ACTIVITY_NO 체험번호 외래키
    ADD CONSTRAINT FK_FARM_ACTIVITY_SCHEDULE_ACTI FOREIGN KEY (ACTIVITY_NO)
        REFERENCES FARM_ACTIVITY (ACTIVITY_NO);

-- 체험 일정 시퀀스 생성
--DROP SEQUENCE ACTIVITY_SCHEDULE_SEQ;
CREATE SEQUENCE ACTIVITY_SCHEDULE_SEQ;


--13. 농장체험/일손돕기신청서(일반인 기준) 정보 테이블  ---FK(작성자,체험번호)		
--DROP TABLE APPLICATION;
CREATE TABLE APPLICATION
(
    APPLICATION_NO     NUMBER           NOT NULL,               -- 신청서 번호 
    ACTIVITY_NO        NUMBER           NOT NULL,               -- 체험 번호(FK) 
    USER_NO            NUMBER     NOT NULL,                     -- 사용자 번호(FK) 
    APPLICANT_NAME     VARCHAR2(100 char)     NOT NULL,         -- 신청자 이름 
    APPLICANT_PHONE    VARCHAR2(14)     NOT NULL,               -- 신청자 대표 번호, 전화번호는 위에서 설명했듯이 14로 다 변경할게요 
    APPLICANT_EMAIL    VARCHAR2(100)    NOT NULL,               -- 신청자 이메일 
    PEOPLE             NUMBER           NOT NULL,               -- 신청 인원 
    ACTIVITY_DATE      DATE             NULL,                   -- 신청 날짜(체험하는 날짜) 
    IS_GROUP           NUMBER DEFAULT 0 NOT NULL,               -- 단체 여부(1=단체) 
    IS_APPROVAL        NUMBER DEFAULT 0 NULL,                   -- 승인 여부(신청서 승인여부 1=신청서 승인완료)
    CONSTRAINT APPLICATION_PK PRIMARY KEY (APPLICATION_NO)      -- 기본키 설정
);

COMMENT ON TABLE APPLICATION IS '농장체험/일손돕기신청서(일반인 기준) 정보 테이블  ---FK(작성자,체험번호)';

COMMENT ON COLUMN APPLICATION.APPLICATION_NO IS '신청서 번호';

COMMENT ON COLUMN APPLICATION.ACTIVITY_NO IS '체험 번호';

COMMENT ON COLUMN APPLICATION.USER_NO IS '신청자(일반 사용자 번호)';

COMMENT ON COLUMN APPLICATION.APPLICANT_NAME IS '신청자 이름(혹은 대표자 이름)';

COMMENT ON COLUMN APPLICATION.APPLICANT_PHONE IS '신청자 연락처';

COMMENT ON COLUMN APPLICATION.APPLICANT_EMAIL IS '신청자 이메일';

COMMENT ON COLUMN APPLICATION.PEOPLE IS '신청 인원 수';

COMMENT ON COLUMN APPLICATION.ACTIVITY_DATE IS '체험할 날짜';

COMMENT ON COLUMN APPLICATION.IS_GROUP IS '단체 여부(1=단체-10명이상, 0=개인)';

COMMENT ON COLUMN APPLICATION.IS_APPROVAL IS '승인여부(1=신청승인됨, 0=신청보류됨)';

ALTER TABLE APPLICATION
    ADD CONSTRAINT FK_APPLICATION_USER_NO_USER_US FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO)on delete cascade;

ALTER TABLE APPLICATION
    ADD CONSTRAINT FK_APPLICATION_ACTIVITY_NO_FAR FOREIGN KEY (ACTIVITY_NO)
        REFERENCES FARM_ACTIVITY (ACTIVITY_NO)on delete cascade;

-- 이상 없음

--농장체험/일손돕기신청서(일반인 기준) 정보 테이블  ---FK(작성자,체험번호) 시퀀스 생성
--DROP SEQUENCE application_seq;
CREATE SEQUENCE application_seq;

-- 이상 없음
        
--14. 농장의 체험 활동(농장 체험/일손 돕기)에 대한 파일 정보를 저장하는 테이블 -- FK ( 체험 번호 )				
--DROP TABLE FARM_ACTIVITY_FILE;
CREATE TABLE FARM_ACTIVITY_FILE
(
    ACTIVITY_FILE_NO    NUMBER           NOT NULL,                      -- 체험 활동 파일 번호
    ACTIVITY_NO         NUMBER           NULL,                          -- 체험 활동 번호(FK) 
    ORIGIN_NAME         VARCHAR2(300)    NULL,                          -- 체험 활동 파일 원래 이름 
    FILE_RENAME         VARCHAR2(300)    NULL,                          -- 체험 활동 파일 저장된 이름(새로운 이름) 
    SAVE_PATH           VARCHAR2(500)    NULL,                          -- 체험 활동 파일 저장 경로 
    IS_THUMBNAIL        NUMBER DEFAULT 0 NULL,                          -- 썸네일 여부(1=썸네일이다)
    CONSTRAINT FARM_ACTIVITY_FILE_PK PRIMARY KEY (ACTIVITY_FILE_NO)     -- 기본키 설정
);

COMMENT ON TABLE FARM_ACTIVITY_FILE IS '농장의 체험 활동(농장 체험/일손 돕기)에 대한 파일 정보를 저장하는 테이블 -- FK ( 체험 번호 )';

COMMENT ON COLUMN FARM_ACTIVITY_FILE.ACTIVITY_FILE_NO IS '체험 파일 번호';

COMMENT ON COLUMN FARM_ACTIVITY_FILE.ACTIVITY_NO IS '체험 번호';

COMMENT ON COLUMN FARM_ACTIVITY_FILE.ORIGIN_NAME IS '파일 원래 이름';

COMMENT ON COLUMN FARM_ACTIVITY_FILE.FILE_RENAME IS '파일 저장된 이름';

COMMENT ON COLUMN FARM_ACTIVITY_FILE.SAVE_PATH IS '파일 저장된 경로';

COMMENT ON COLUMN FARM_ACTIVITY_FILE.IS_THUMBNAIL IS '썸네일 여부(0 = 썸네일이 아니다, 1= 썸네일이다)';

ALTER TABLE FARM_ACTIVITY_FILE
    ADD CONSTRAINT FK_FARM_ACTIVITY_FILE_ACTIVITY FOREIGN KEY (ACTIVITY_NO)
        REFERENCES FARM_ACTIVITY (ACTIVITY_NO)on delete cascade;

--농장의 체험 활동(농장 체험/일손 돕기)에 대한 파일 정보를 저장하는 테이블 -- FK ( 체험 번호 ) 시퀀스 생성
--DROP SEQUENCE farm_activity_file_seq;
CREATE SEQUENCE farm_activity_file_seq;

-- 이상 없음

-- 15. 공지사항과 자주 묻는 질문 정보 테이블					
--DROP TABLE NOTICE;
CREATE TABLE NOTICE
(
    NOTICE_NO    NUMBER            NOT NULL,            -- 공지사항&자주묻는질문 글 번호
    TITLE        VARCHAR2(100 char)      NOT NULL,      -- 제목 
    CONTENT      VARCHAR2(2000)    NOT NULL,            -- 내용 
    IS_NOTICE    NUMBER DEFAULT 0  NOT NULL,            -- 공지사항 여부(1=공지사항이다) 
    CONSTRAINT NOTICE_PK PRIMARY KEY (NOTICE_NO)        -- 기본키 설정
);

COMMENT ON TABLE NOTICE IS '공지사항과 자주 묻는 질문 정보 테이블';

COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항 또는  자주 묻는 질문 번호';

COMMENT ON COLUMN NOTICE.TITLE IS '공지사항 또는  자주 묻는 질문 제목';

COMMENT ON COLUMN NOTICE.CONTENT IS '공지사항 또는  자주 묻는 질문 내용';

COMMENT ON COLUMN NOTICE.IS_NOTICE IS '공지사항 여부 확인(1 = 공지사항, 0 = 자주 묻는 질문)';

-- 공지사항과 자주 묻는 질문 정보 테이블 시퀀스 생성
--DROP SEQUENCE notice_seq;
CREATE SEQUENCE notice_seq;

-- 이상 없음

--16. 농업 소식(웹 크롤링한 기사 데이터) 정보 테이블					
--DROP TABLE FARM_NEWS;
CREATE TABLE FARM_NEWS
(
    FARM_NEWS_NO    NUMBER            NOT NULL,         -- 농업 소식 글 번호
    TITLE           VARCHAR2(100 char)     NOT NULL,    -- 제목 
    LINK            VARCHAR2(300)     NOT NULL,         -- 사이트 링크 
    SITE_NAME       VARCHAR2(100 char)    NOT NULL,     -- 농업 소식 웹 크롤링 한 사이트 
    REG_DATE        DATE              NOT NULL,         -- 기사가 등록된(작성된) 날짜 
    CONSTRAINT FARM_NEWS_PK PRIMARY KEY (FARM_NEWS_NO)  -- 기본키 설정
);

COMMENT ON TABLE FARM_NEWS IS '농업 소식(웹 크롤링한 기사 데이터) 정보 테이블';

COMMENT ON COLUMN FARM_NEWS.FARM_NEWS_NO IS '농업소식 번호';

COMMENT ON COLUMN FARM_NEWS.TITLE IS '농업소식 제목';

COMMENT ON COLUMN FARM_NEWS.LINK IS '데이터 출처 URL';

COMMENT ON COLUMN FARM_NEWS.SITE_NAME IS '데이터 출처 사이트';

COMMENT ON COLUMN FARM_NEWS.REG_DATE IS '기사 데이터 등록일';

--농업 소식(웹 크롤링한 기사 데이터) 정보 테이블 시퀀스 생성
--DROP SEQUENCE farm_news_seq;
CREATE SEQUENCE farm_news_seq;

-- 이상 없음

--17. 1대1문의 질문 정보 테이블 --FK 작성자(회원 번호)(IS_ANSWERED, IS_FARMER default 값은 '0')		
--DROP TABLE QUESTION_ONEONONE CASCADE CONSTRAINTS;
CREATE TABLE QUESTION_ONEONONE
(
    QUESTION_NO    NUMBER                NOT NULL,                  -- 1대1문의 번호  
    TITLE          VARCHAR2(100 char)    NOT NULL,                  -- 문의 제목   
    CONTENT        VARCHAR2(2000)        NOT NULL,                  -- 문의 내용   
    USER_NO        NUMBER                NULL,                      -- 문의자(일반 사용자 번호)(FK)   
    FARMER_NO      NUMBER                NULL,                      -- 문의자(농업인 사용자 번호)(FK)   
    REG_DATE       DATE DEFAULT sysdate  NOT NULL,                  -- 작성날짜 DEFAULT sysdate  
    IS_ANSWERED    NUMBER DEFAULT 0      NOT NULL,                  -- 답변 여부 DEFAULT 0(1= 답변 완료)  
    CONSTRAINT QUESTION_ONEONONE_PK PRIMARY KEY (QUESTION_NO)
);

COMMENT ON TABLE QUESTION_ONEONONE IS '1대1문의 질문 정보 테이블 --FK 작성자(회원 번호)(IS_ANSWEREDdefault 값은 0)';

COMMENT ON COLUMN QUESTION_ONEONONE.QUESTION_NO IS '공지사항 또는  자주 묻는 질문 번호';

COMMENT ON COLUMN QUESTION_ONEONONE.TITLE IS '제목';

COMMENT ON COLUMN QUESTION_ONEONONE.CONTENT IS '내용';

COMMENT ON COLUMN QUESTION_ONEONONE.USER_NO IS '작성자(회원 번호)';

COMMENT ON COLUMN QUESTION_ONEONONE.FARMER_NO IS '작성자(농업인 회원 번호)';

COMMENT ON COLUMN QUESTION_ONEONONE.REG_DATE IS '작성일';

COMMENT ON COLUMN QUESTION_ONEONONE.IS_ANSWERED IS '답변여부 (1 = 답변완료, 0 = 미답변)';

ALTER TABLE QUESTION_ONEONONE                                               -- USER_NO 1대1문의 일반 사용자가 작성시
    ADD CONSTRAINT FK_QUESTION_ONEONONE_USER_NO_U FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO);

ALTER TABLE QUESTION_ONEONONE                                               -- FARMER_NO 1대1문의 농업인 사용자가 작성시
    ADD CONSTRAINT FK_QUESTION_ONEONONE_FARMER_NO FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO);
        
-- 1대1문의 질문 정보 테이블 --FK 작성자(회원 번호)(IS_ANSWERED, IS_FARMER default 값은 '0') 시퀀스 생성
--DROP SEQUENCE question_oneonone_seq;
CREATE SEQUENCE question_oneonone_seq;

-- 이상 없음


--18. 관리자 테이블					
--DROP TABLE ADMIN CASCADE CONSTRAINTS;
CREATE TABLE ADMIN
(
    ADMIN_NO    NUMBER           NOT NULL,      -- 관리자 번호
    ADMIN_ID    VARCHAR2(20)     NULL,          -- 관리자 아이디 
    ADMIN_PW    VARCHAR2(100)    NULL,          -- 관리자 비밀번호 
    CONSTRAINT ADMIN_PK PRIMARY KEY (ADMIN_NO)  -- 기본키 설정
);

COMMENT ON TABLE ADMIN IS '관리자 테이블';

COMMENT ON COLUMN ADMIN.ADMIN_NO IS '관리자 번호';

COMMENT ON COLUMN ADMIN.ADMIN_ID IS '관리자 아이디';

COMMENT ON COLUMN ADMIN.ADMIN_PW IS '관리자 비밀번호';

--관리자 테이블 시퀀스 생성
--DROP SEQUENCE admin_seq;
CREATE SEQUENCE admin_seq;

-- 이상 없음

--19. 1대1문의 답변 정보 테이블 --FK 작성자(관리자번호), 질문 번호(IS_FARMER default 값은 '0')			
--DROP TABLE ANSWERED_ONEONONE;

CREATE TABLE ANSWERED_ONEONONE
(
    ANSWERED_NO    NUMBER                NOT NULL,                  -- 1대1 문의 답변 번호 
    TITLE          VARCHAR2(100 char)    NOT NULL,                  -- 1대1 문의 답변 제목  
    CONTENT        VARCHAR2(2000)        NOT NULL,                  -- 1대1 문의 답변 내용 
    ADMIN_NO       NUMBER                NULL,                      -- 1대1 문의 답변자(관리자), FK  
    REG_DATE       DATE DEFAULT sysdate  NOT NULL,                  -- 작성날짜 DEFAULT sysdate 
    QUESTION_NO    NUMBER                NULL,                      -- 작성되는 답변에 대한 문의 번호(FK) 
    CONSTRAINT ANSWERED_ONEONONE_PK PRIMARY KEY (ANSWERED_NO)
);

COMMENT ON TABLE ANSWERED_ONEONONE IS '1대1문의 답변 정보 테이블 --FK 작성자(관리자번호), 질문 번호';

COMMENT ON COLUMN ANSWERED_ONEONONE.ANSWERED_NO IS '답변 번호';

COMMENT ON COLUMN ANSWERED_ONEONONE.TITLE IS '제목';

COMMENT ON COLUMN ANSWERED_ONEONONE.CONTENT IS '내용';

COMMENT ON COLUMN ANSWERED_ONEONONE.ADMIN_NO IS '작성자(관리자 번호)';

COMMENT ON COLUMN ANSWERED_ONEONONE.REG_DATE IS '작성일';

COMMENT ON COLUMN ANSWERED_ONEONONE.QUESTION_NO IS '질문 번호';

ALTER TABLE ANSWERED_ONEONONE                                                   -- ADMIN_NO 관리자 번호(1대1문의 답변해주는 사람)
    ADD CONSTRAINT FK_ANSWERED_ONEONONE_ADMIN_NO_ FOREIGN KEY (ADMIN_NO)
        REFERENCES ADMIN (ADMIN_NO);

ALTER TABLE ANSWERED_ONEONONE                                                   -- QUESTION_NO 문의 번호(답변을 작성할 질문 번호)
    ADD CONSTRAINT FK_ANSWERED_ONEONONE_QUESTION_ FOREIGN KEY (QUESTION_NO)
        REFERENCES QUESTION_ONEONONE (QUESTION_NO);

--1대1문의 답변 정보 테이블 --FK 작성자(관리자번호), 질문 번호(IS_FARMER default 값은 'N') 시퀀스 생성
--DROP SEQUENCE answer_oneonone_seq;
CREATE SEQUENCE answer_oneonone_seq;

-- 이상 없음


--20. 상품의 정보를 저장하는 테이블 --FK 상품을 생산한 농업인 번호(PRODUCT_SAS default 값은 '0')			
--DROP TABLE PRODUCT CASCADE CONSTRAINTS;
CREATE TABLE PRODUCT
(
    PRODUCT_NO          NUMBER           NOT NULL,              -- 상품 번호
    NAME                VARCHAR2(100 char)     NOT NULL,        -- 상품 이름
    EXPLAIN             CLOB             NOT NULL,              -- 상품 설명
    EFFECT              VARCHAR2(300)    NULL,                  -- 상품 효능
    FOOD                VARCHAR2(300)    NULL,                  -- 상품으로 해먹을 수 있는 요리
    KIND                VARCHAR2(100)     NOT NULL,             -- 상품의 종류
    PRODUCT_COUNTRY     VARCHAR2(100)    NOT NULL,              -- 상품 원산지
    FARMER_NO           NUMBER           NOT NULL,              -- 상품 판매자(농업인사용자)(FK)
    PRODUCT_SAS         NUMBER DEFAULT 0 NOT NULL,              -- 상품 판매 승인여부(1=승인완료) DEFAULT 0
    DELIVERY            VARCHAR2(100)    NOT NULL,              -- 배달 방법
    IS_SEASONAL_FOOD    NUMBER DEFAULT 0 NOT NULL,              -- 제철 음식 여부(1=제철음식) DEFAULT 0
    SALES               NUMBER  DEFAULT 0 NOT NULL,             -- 판매량  DEFAULT 0
    CONSTRAINT PRODUCT_PK PRIMARY KEY (PRODUCT_NO)              -- 기본키 설정
);

COMMENT ON TABLE PRODUCT IS '상품의 정보를 저장하는 테이블 --FK 상품을 생산한 농업인 번호';

COMMENT ON COLUMN PRODUCT.PRODUCT_NO IS '상품 번호';

COMMENT ON COLUMN PRODUCT.NAME IS '상품 이름';

COMMENT ON COLUMN PRODUCT.EXPLAIN IS '상품에 대한 상세 설명';

COMMENT ON COLUMN PRODUCT.EFFECT IS '상품에 대한 효능';

COMMENT ON COLUMN PRODUCT.FOOD IS '상품으로 해먹을 수 있는 요리';

COMMENT ON COLUMN PRODUCT.KIND IS '상품의 종류(Ex. 상품 이름이 김농부의 포도이면 상품 종류는 포도 이다)';

COMMENT ON COLUMN PRODUCT.PRODUCT_COUNTRY IS '상품의 원산지';

COMMENT ON COLUMN PRODUCT.FARMER_NO IS '상품을 생산한 농업인 번호';

COMMENT ON COLUMN PRODUCT.PRODUCT_SAS IS '상품 판매 승인여부(1=승인완료를 뜻함, 0= 승인보류)';

COMMENT ON COLUMN PRODUCT.DELIVERY IS '상품 배달 방법';

COMMENT ON COLUMN PRODUCT.IS_SEASONAL_FOOD IS '판매 상품의 제철음식 여부(0=일반음식이라는 뜻, 1=제철음식)';

COMMENT ON COLUMN PRODUCT.SALES IS '판매량(default=0)';

ALTER TABLE PRODUCT                                                         -- 판매자 (FARMER_NO) 외래키
    ADD CONSTRAINT FK_PRODUCT_FARMER_NO_FARMER_FA FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO)on delete cascade;

--상품의 정보를 저장하는 테이블 --FK 상품을 생산한 농업인 번호(PRODUCT_SAS default 값은 '0') 시퀀스 생성 
--DROP SEQUENCE product_seq;
CREATE SEQUENCE product_seq;

-- 이상 없음

--21. 판매 상품의 파일을 저장하는 테이블 --FK 판매 상품 번호	
--DROP TABLE PRODUCT_FILE;
CREATE TABLE PRODUCT_FILE
(
    FILE_NO        NUMBER           NOT NULL,           -- 판매상품 파일 번호
    PRODUCT_NO     NUMBER           NOT NULL,           -- 판매 상품 번호
    ORIGIN_NAME    VARCHAR2(300)    NOT NULL,           -- 파일 원래 이름
    FILE_RENAME    VARCHAR2(300)    NOT NULL,           -- 파일 새로운 이름(저장된 이름)
    SAVE_PATH      VARCHAR2(300)    NOT NULL,           -- 파일 저장 경로
    IS_THUMBNAIL    NUMBER DEFAULT 0 NULL,              -- 썸네일 여부(1=썸네일이다)
    CONSTRAINT PRODUCT_FILE_PK PRIMARY KEY (FILE_NO)    -- 기본키 설정
);

COMMENT ON TABLE PRODUCT_FILE IS '판매 상품의 파일을 저장하는 테이블 --FK 판매 상품 번호';

COMMENT ON COLUMN PRODUCT_FILE.FILE_NO IS '파일 번호';

COMMENT ON COLUMN PRODUCT_FILE.PRODUCT_NO IS '판매 상품 번호';

COMMENT ON COLUMN PRODUCT_FILE.ORIGIN_NAME IS '파일 원래 이름';

COMMENT ON COLUMN PRODUCT_FILE.FILE_RENAME IS '파일 저장된 이름';

COMMENT ON COLUMN PRODUCT_FILE.SAVE_PATH IS '파일 경로';

COMMENT ON COLUMN PRODUCT_FILE.IS_THUMBNAIL IS '썸네일 여부(0 = 썸네일이 아니다, 1= 썸네일이다)';

ALTER TABLE PRODUCT_FILE
    ADD CONSTRAINT FK_PRODUCT_FILE_PRODUCT_NO_PRO FOREIGN KEY (PRODUCT_NO)
        REFERENCES PRODUCT (PRODUCT_NO)on delete cascade;

--판매 상품의 파일을 저장하는 테이블 --FK 판매 상품 번호 시퀀스 생성
--DROP SEQUENCE product_file_seq;
CREATE SEQUENCE product_file_seq;


--22. 판매 상품의 옵션 정보를 저장하는 테이블 -- FK 상품 번호			
--DROP TABLE PRODUCT_OPTION CASCADE CONSTRAINTS;
CREATE TABLE PRODUCT_OPTION
(
    OPTION_NO          NUMBER           NOT NULL,           -- 판매상품 옵션 번호
    PRODUCT_NO         NUMBER           NOT NULL,           -- 판매상품 번호
    NAME               VARCHAR2(100 char)    NOT NULL,      -- 판매 상품 옵션 이름
    PRICE              NUMBER           NOT NULL,           -- 판매 상품 옵션 가격
    AMOUNT             NUMBER           NOT NULL,           -- 옵션의 재고(수량)
    QUALITY            VARCHAR2(10)     NOT NULL,           -- 옵션 상품의 품질(상,중,하)
    EXPIRATION_DATE    DATE     NOT NULL,                   -- 유통기한
    CONSTRAINT PRODUCT_OPTION_PK PRIMARY KEY (OPTION_NO)    -- 기본키 설정
);

COMMENT ON TABLE PRODUCT_OPTION IS '판매 상품의 옵션 정보를 저장하는 테이블 -- FK 상품 번호';

COMMENT ON COLUMN PRODUCT_OPTION.OPTION_NO IS '옵션 번호';

COMMENT ON COLUMN PRODUCT_OPTION.PRODUCT_NO IS '상품 번호';

COMMENT ON COLUMN PRODUCT_OPTION.NAME IS '옵션 이름';

COMMENT ON COLUMN PRODUCT_OPTION.PRICE IS '옵션 상품의 가격';

COMMENT ON COLUMN PRODUCT_OPTION.AMOUNT IS '옵션 상품의 재고(수량)';

COMMENT ON COLUMN PRODUCT_OPTION.QUALITY IS '옵션 상품의 품질';

COMMENT ON COLUMN PRODUCT_OPTION.EXPIRATION_DATE IS '옵션 상품의 유통기한';

ALTER TABLE PRODUCT_OPTION
    ADD CONSTRAINT FK_PRODUCT_OPTION_PRODUCT_NO_P FOREIGN KEY (PRODUCT_NO)
        REFERENCES PRODUCT (PRODUCT_NO)on delete cascade;

--판매 상품의 옵션 정보를 저장하는 테이블 -- FK 상품 번호 시퀀스 생성
--DROP SEQUENCE product_option_seq;
CREATE SEQUENCE product_option_seq;

-- 이상 없음

--23. 회원이 상품을 주문한 정보를 저장하는 테이블 -- FK 상품 옵션 번호, 일반 회원 번호			
--DROP TABLE TB_ORDER;

CREATE TABLE TB_ORDER
(
    ORDER_NO          NUMBER                NOT NULL,               -- 주문 번호 
    OPTION_NO         NUMBER                NOT NULL,               -- 주문한 옵션 번호 
    USER_NO           NUMBER                NULL,                   -- 주문한 사람(사용자번호, FK) 
    FARMER_NO         NUMBER                NULL,                   -- 주문한 사람(농업인 사용자 번호, FK)
    ORDER_DATE        DATE  DEFAULT sysdate NOT NULL,               -- 주문 날짜 DEFAULT sysdate 
    PAYMENT_STATUS    NUMBER DEFAULT 0      NOT NULL,               -- 결제 상태(1=결제완료) 
    PAYMENT_PRICE     NUMBER                NOT NULL,               -- 결제 금액 
    ZONECODE          VARCHAR2(7)           NOT NULL,               -- 배송지 우편 번호 
    FIRST_ADDRESS     VARCHAR2(300 char)    NOT NULL,               -- 배송지 주소(도로명 주소) 
    SECOND_ADDRESS    VARCHAR2(300 char)    NOT NULL,               -- 배송지 상세 주소(예를 들면, 아파트 동, 호수) 
    CONSTRAINT TB_ORDER_PK PRIMARY KEY (ORDER_NO)                   -- 기본키 설정
);

COMMENT ON TABLE TB_ORDER IS '회원이 상품을 주문한 정보를 저장하는 테이블 -- FK 상품 옵션 번호, 일반 회원 번호';

COMMENT ON COLUMN TB_ORDER.ORDER_NO IS '주문 번호';

COMMENT ON COLUMN TB_ORDER.OPTION_NO IS '상품 옵션 번호';

COMMENT ON COLUMN TB_ORDER.USER_NO IS '일반 회원 번호';

COMMENT ON COLUMN TB_ORDER.FARMER_NO IS '농업인 사용자 번호(상품 구매자가 농업인일 경우)';

COMMENT ON COLUMN TB_ORDER.ORDER_DATE IS '주문 날짜';

COMMENT ON COLUMN TB_ORDER.PAYMENT_STATUS IS '결제상태(1=결제완료, 0=결제대기)';

COMMENT ON COLUMN TB_ORDER.PAYMENT_PRICE IS '결제금액';

COMMENT ON COLUMN TB_ORDER.ZONECODE IS '우편 번호';

COMMENT ON COLUMN TB_ORDER.FIRST_ADDRESS IS '주소(도로명)';

COMMENT ON COLUMN TB_ORDER.SECOND_ADDRESS IS '상세 주소';

ALTER TABLE TB_ORDER                                                        -- 상품을 구매한 회원 번호 외래키 (USER_NO)
    ADD CONSTRAINT FK_TB_ORDER_USER_NO_USER_TB_US FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO);

ALTER TABLE TB_ORDER                                                        -- 구매한 상품의 옵션 번호 외래키(OPTION_NO)
    ADD CONSTRAINT FK_TB_ORDER_OPTION_NO_PRODUCT_ FOREIGN KEY (OPTION_NO)
        REFERENCES PRODUCT_OPTION (OPTION_NO);

ALTER TABLE TB_ORDER                                                        -- 구매자가 농업인일 경우 FARMER_NO(농업인 사용자 번호) 외래키
    ADD CONSTRAINT FK_TB_ORDER_FARMER_NO_FARMER_F FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO);
        
--회원이 상품을 주문한 정보를 저장하는 테이블 -- FK 상품 옵션 번호, 일반 회원 번호 시퀀스 생성
--DROP SEQUENCE TB_ORDER_seq;
CREATE SEQUENCE TB_ORDER_seq;

-- 이상 없음

--24. 장바구니(회원이 판매 상품을 담아놓는 곳) 정보를 저장하는 테이블 -- FK 상품 번호, 옵션 번호				
--DROP TABLE BASKET;
CREATE TABLE BASKET
(
    BASKET_NO     NUMBER    NOT NULL,               -- 장바구니 번호 
    USER_NO       NUMBER    NULL,                   -- 일반 사용자 번호 
    FARMER_NO     NUMBER    NULL,                   -- 농업인 사용자 번호 
    PRODUCT_NO    NUMBER    NOT NULL,               -- 상품 번호 
    OPTION_NO     NUMBER    NOT NULL,               -- 옵션 번호 
    CONSTRAINT BASKET_PK PRIMARY KEY (BASKET_NO)    -- 기본키 설정
);

COMMENT ON TABLE BASKET IS '장바구니(회원이 판매 상품을 담아놓는 곳) 정보를 저장하는 테이블 -- FK 상품 번호, 옵션 번호';

COMMENT ON COLUMN BASKET.BASKET_NO IS '장바구니 번호';

COMMENT ON COLUMN BASKET.USER_NO IS '사용자 번호';

COMMENT ON COLUMN BASKET.FARMER_NO IS '농업인 사용자 번호(상품 구매자가 농업인일 경우)';

COMMENT ON COLUMN BASKET.PRODUCT_NO IS '상품 번호';

COMMENT ON COLUMN BASKET.OPTION_NO IS '옵션 번호';

ALTER TABLE BASKET                                                              -- 구매자가 일반 회원일 경우 USER_NO
    ADD CONSTRAINT FK_BASKET_USER_NO_USER_TB_USER FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO);

ALTER TABLE BASKET                                                              -- 구매한 상품 번호 PRODUCT_NO
    ADD CONSTRAINT FK_BASKET_PRODUCT_NO_PRODUCT_P FOREIGN KEY (PRODUCT_NO)
        REFERENCES PRODUCT (PRODUCT_NO);

ALTER TABLE BASKET                                                              -- 구매한 상품 옵션 번호 OPTION_NO
    ADD CONSTRAINT FK_BASKET_OPTION_NO_PRODUCT_OP FOREIGN KEY (OPTION_NO)
        REFERENCES PRODUCT_OPTION (OPTION_NO);

ALTER TABLE BASKET                                                              -- 구매자가 농업인일 경우 FARMER_NO
    ADD CONSTRAINT FK_BASKET_FARMER_NO_FARMER_FAR FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO);

--장바구니(회원이 판매 상품을 담아놓는 곳) 정보를 저장하는 테이블 -- FK 상품 번호, 옵션 번호 시퀀스 생성
--DROP SEQUENCE basket_seq;
CREATE SEQUENCE basket_seq;

-- 이상없음

--25. 판매자 문의 정보를 저장하는 테이블 -- FK 문의자(사용자) 번호				
--DROP TABLE SELL_QUESTION CASCADE CONSTRAINTS;
CREATE TABLE SELL_QUESTION
(
    SELL_QUESTION_NO    NUMBER                NOT NULL,                 -- 판매자 문의 번호 
    PRODUCT_NO          NUMBER                NOT NULL,                 -- 판매 상품 번호 
    TITLE               VARCHAR2(100 char)    NOT NULL,                 -- 판매 문의 제목 
    CONTENT             VARCHAR2(2000)        NOT NULL,                 -- 판매 문의 내용 
    WRITE_DATE          DATE DEFAULT sysdate  NOT NULL,                 -- 문의 등록일 DEFAULT sysdate 
    USER_NO             NUMBER                NULL,                     -- 문의 작성자(일반 사용자, FK) 
    FARMER_NO           NUMBER                NULL,                     -- 문의 작성자(농업인 사용자, FK)
    CONSTRAINT SELL_QUESTION_PK PRIMARY KEY (SELL_QUESTION_NO)
);

COMMENT ON TABLE SELL_QUESTION IS '판매자 문의 정보를 저장하는 테이블 -- FK 문의자(사용자) 번호';

COMMENT ON COLUMN SELL_QUESTION.SELL_QUESTION_NO IS '판매자 문의 번호';

COMMENT ON COLUMN SELL_QUESTION.PRODUCT_NO IS '상품 번호';

COMMENT ON COLUMN SELL_QUESTION.TITLE IS '문의 제목';

COMMENT ON COLUMN SELL_QUESTION.CONTENT IS '문의 내용';

COMMENT ON COLUMN SELL_QUESTION.WRITE_DATE IS '작성 날짜';

COMMENT ON COLUMN SELL_QUESTION.USER_NO IS '문의자(사용자) 번호';

COMMENT ON COLUMN SELL_QUESTION.FARMER_NO IS '문의자(다른 농업인 사용자) 번호';

ALTER TABLE SELL_QUESTION                                                   -- 구매자가 일반인 회원일 경우를 대비한 외래키 USER_NO
    ADD CONSTRAINT FK_SELL_QUESTION_USER_NO_USER_ FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO);

ALTER TABLE SELL_QUESTION                                                   -- 문의할 상품 번호 외래키 PRODUCT_NO
    ADD CONSTRAINT FK_SELL_QUESTION_PRODUCT_NO_PR FOREIGN KEY (PRODUCT_NO)
        REFERENCES PRODUCT (PRODUCT_NO);

ALTER TABLE SELL_QUESTION                                                   -- 구매자가 농업인 회원일 경우를 대비한 외래키 FARMER_NO
    ADD CONSTRAINT FK_SELL_QUESTION_FARMER_NO_FAR FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO);

--판매자 문의 정보를 저장하는 테이블 -- FK 문의자(사용자) 번호	시퀀스 생성
--DROP SEQUENCE sell_question_seq;
CREATE SEQUENCE sell_question_seq;

-- 이상 없음

--26. 판매자 문의에 대한 답변 댓글 정보를 저장하는 테이블				
--DROP TABLE SELL_ANSWER;
CREATE TABLE SELL_ANSWER
(
    SELL_ANSWER_NO      NUMBER            NOT NULL,                 -- 판매자 문의에 대한 답변 번호
    CONTENT             VARCHAR2(2000)    NOT NULL,                 -- 답변 내용
    REG_DATE            DATE DEFAULT sysdate NOT NULL,              -- 답변 작성일
    SELL_QUESTION_NO    NUMBER            NULL,                     -- 작성한 답변의 질문 번호
    FARMER_NO           NUMBER            NULL,                     -- 답변 작성자(농업인, FK)
    CONSTRAINT SELL_ANSWER_PK PRIMARY KEY (SELL_ANSWER_NO)          -- 기본키 설정
);

COMMENT ON TABLE SELL_ANSWER IS '판매자 문의에 대한 답변 댓글 정보를 저장하는 테이블';

COMMENT ON COLUMN SELL_ANSWER.SELL_ANSWER_NO IS '판매자 문의 답변 댓글 번호';

COMMENT ON COLUMN SELL_ANSWER.CONTENT IS '답변 내용';

COMMENT ON COLUMN SELL_ANSWER.REG_DATE IS '작성날짜';

COMMENT ON COLUMN SELL_ANSWER.SELL_QUESTION_NO IS '판매자 문의 번호';

COMMENT ON COLUMN SELL_ANSWER.FARMER_NO IS '답변 작성자';

ALTER TABLE SELL_ANSWER
    ADD CONSTRAINT FK_SELL_ANSWER_SELL_QUESTION_N FOREIGN KEY (SELL_QUESTION_NO)
        REFERENCES SELL_QUESTION (SELL_QUESTION_NO)on delete cascade;

--판매자 문의에 대한 답변 댓글 정보를 저장하는 테이블 시퀀스 생성
--DROP SEQUENCE sell_answer_seq;
CREATE SEQUENCE sell_answer_seq;

-- 이상 없음

--27. 판매 페이지의 리뷰의 데이터를 저장하는 테이블 --FK 상품번호,회원번호			
--DROP TABLE REVIEW CASCADE CONSTRAINTS;
--DROP TABLE REVIEW;
CREATE TABLE REVIEW
(
    REVIEW_NO       NUMBER            NOT NULL,         -- 리뷰 번호 
    PRODUCT_NO      NUMBER            NOT NULL,         -- 상품 번호 
    CONTENT         VARCHAR2(2000)    NOT NULL,         -- 리뷰 내용 
    FARMER_NO       NUMBER            NULL,             -- 농업인 사용자 번호(구매자가 농업인 사용자일 경우)
    USER_NO         NUMBER            NULL,             -- 일반 사용자 번호 (구매자가 일반 사용자일 경우)
    REG_DATE        DATE              NOT NULL,         -- 작성일 DEFAULT sysdate 
    REVIEW_SCORE    NUMBER            NOT NULL,         -- 리뷰 점수 
    CONSTRAINT REVIEW_PK PRIMARY KEY (REVIEW_NO)        -- 기본키 설정
);

COMMENT ON TABLE REVIEW IS '판매 페이지의 리뷰의 데이터를 저장하는 테이블 --FK 상품번호,회원번호';

COMMENT ON COLUMN REVIEW.REVIEW_NO IS '리뷰 번호';

COMMENT ON COLUMN REVIEW.PRODUCT_NO IS '상품 번호';

COMMENT ON COLUMN REVIEW.CONTENT IS '리뷰 내용';

COMMENT ON COLUMN REVIEW.FARMER_NO IS '농업인 사용자 번호(상품 구매자가 농업인일 경우)';

COMMENT ON COLUMN REVIEW.USER_NO IS '회원 번호';

COMMENT ON COLUMN REVIEW.REG_DATE IS '작성일';

COMMENT ON COLUMN REVIEW.REVIEW_SCORE IS '리뷰 점수';

ALTER TABLE REVIEW
    ADD CONSTRAINT FK_REVIEW_PRODUCT_NO_PRODUCT_P FOREIGN KEY (PRODUCT_NO)
        REFERENCES PRODUCT (PRODUCT_NO);

ALTER TABLE REVIEW
    ADD CONSTRAINT FK_REVIEW_FARMER_NO_FARMER_FAR FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO);

ALTER TABLE REVIEW
    ADD CONSTRAINT FK_REVIEW_USER_NO_USER_TB_USER FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO);

--판매 페이지의 리뷰의 데이터를 저장하는 테이블 --FK 상품번호,회원번호 시퀀스 생성
--DROP SEQUENCE review_seq;
CREATE SEQUENCE review_seq;

--28. 판매 페이지의 리뷰를 작성할 때 이미지 데이터를 저장하는 테이블				
--DROP TABLE REVIEW_FILE;
CREATE TABLE REVIEW_FILE
(
    REVIEW_FILE_NO    NUMBER           NOT NULL,                -- 리뷰 파일 번호
    REVIEW_NO         NUMBER           NOT NULL,                -- 리뷰 번호(FK)
    ORIGIN_NAME       VARCHAR2(200)    NOT NULL,                -- 파일 원래 이름
    FILE_RENAME            VARCHAR2(200)    NOT NULL,           -- 파일 저장된 이름(새로운 이름)
    SAVE_PATH         VARCHAR2(200)    NOT NULL,                -- 파일 저장 경로
    IS_THUMBNAIL      NUMBER DEFAULT 0 NULL,                    -- 썸네일 여부 (1=썸네일이다.)
    CONSTRAINT REVIEW_FILE_PK PRIMARY KEY (REVIEW_FILE_NO)      -- 기본키 설정
);

COMMENT ON TABLE REVIEW_FILE IS '판매 페이지의 리뷰를 작성할 때 이미지 데이터를 저장하는 테이블';

COMMENT ON COLUMN REVIEW_FILE.REVIEW_FILE_NO IS '리뷰 파일 번호';

COMMENT ON COLUMN REVIEW_FILE.REVIEW_NO IS '리뷰 번호';

COMMENT ON COLUMN REVIEW_FILE.ORIGIN_NAME IS '리뷰 원래 파일명';

COMMENT ON COLUMN REVIEW_FILE.FILE_RENAME IS '리뷰 저장 파일명';

COMMENT ON COLUMN REVIEW_FILE.SAVE_PATH IS '리뷰 파일 저장 경로';

COMMENT ON COLUMN REVIEW_FILE.IS_THUMBNAIL IS '썸네일 여부(0 = 썸네일이 아니다, 1= 썸네일이다)';

ALTER TABLE REVIEW_FILE
    ADD CONSTRAINT FK_REVIEW_FILE_REVIEW_NO_REVIE FOREIGN KEY (REVIEW_NO)
        REFERENCES REVIEW (REVIEW_NO)on delete cascade;
        
--판매 페이지의 리뷰를 작성할 때 이미지 데이터를 저장하는 테이블 시퀀스 생성
--DROP SEQUENCE review_file_seq;
CREATE SEQUENCE review_file_seq;


-- commit;
-- commit; 은 에러 안날 시에만 직접 해주세요!