-- 2020.08.29 Everyones Farm Create Table

-- EveryonesFarm 테이블 생성 쿼리문 n차 수정(벌써 몇 번째 수정일까요...)

-- 2020.08.29(토) EveryonesFarm create table query 수정
-- 수정 사항
-- 테이블 생성 순서 변경
-- NOTICE 테이블 컬럼 변경 -> NOTICE_NO, TITLE, CONTENT, ADMIN_NO, REG_DATE, IS_SHOWED


-- EveryonesFarm 테이블 생성 쿼리문 n차 수정

-- 이미 테이블이 생성되어 있는 사람들을 위한 테이블 삭제 명령문

-- 파일 테이블 모두 삭제
-- DROP SEQUENCE review_file_seq;
-- DROP TABLE REVIEW_FILE;
--
-- DROP SEQUENCE product_file_seq;
-- DROP TABLE PRODUCT_FILE;
-- 
-- DROP SEQUENCE farm_activity_file_seq;
-- DROP TABLE FARM_ACTIVITY_FILE;
-- 
-- DROP SEQUENCE farm_diary_file_seq;
-- DROP TABLE FARM_DIARY_FILE;
-- 
-- DROP SEQUENCE farm_file_seq;
-- DROP TABLE FARM_FILE;

-- ----------------------------------
 DROP SEQUENCE review_seq;
 DROP TABLE REVIEW;

 DROP SEQUENCE sell_answer_seq;
 DROP TABLE SELL_ANSWER;

 DROP SEQUENCE sell_question_seq;
 DROP TABLE SELL_QUESTION;

 DROP SEQUENCE basket_seq;
 DROP TABLE BASKET;

 DROP SEQUENCE TB_ORDER_seq;
 DROP TABLE TB_ORDER;

 DROP SEQUENCE product_option_seq;
 DROP TABLE PRODUCT_OPTION;

 DROP SEQUENCE product_seq;
 DROP TABLE PRODUCT;

 DROP SEQUENCE answer_oneonone_seq;
 DROP TABLE ANSWERED_ONEONONE;

 DROP SEQUENCE question_oneonone_seq;
 DROP TABLE QUESTION_ONEONONE;

 DROP TABLE FARM_NEWS;
 DROP SEQUENCE farm_news_seq;

 DROP SEQUENCE notice_seq;
 DROP TABLE NOTICE; 

 DROP SEQUENCE application_seq;
 DROP TABLE APPLICATION;

 DROP SEQUENCE FARM_ACTIVITY_SCHEDULE_SEQ;
 DROP TABLE FARM_ACTIVITY_SCHEDULE;

 DROP SEQUENCE farm_activity_seq;
 DROP TABLE FARM_ACTIVITY;

 DROP SEQUENCE farming_dailylog_seq;
 DROP TABLE FARMING_DAILYLOG;

 DROP SEQUENCE farm_diary_seq;
 DROP TABLE FARM_DIARY;

 DROP SEQUENCE farm_qna_answer_seq;
 DROP TABLE FARM_QNA_ANSWER;

 DROP SEQUENCE farm_qna_question_seq;
 DROP TABLE FARM_QNA_QUESTION;

 DROP SEQUENCE farm_seq;
 DROP TABLE FARM;

 DROP SEQUENCE farmer_seq;
 DROP TABLE FARMER;
 
 DROP SEQUENCE user_profile_seq;
 DROP TABLE USER_PROFILE;

 DROP SEQUENCE user_seq;
 DROP TABLE USER_TB;

 DROP SEQUENCE admin_seq;
 DROP TABLE ADMIN;

 DROP SEQUENCE EF_FILE_SEQ;
 DROP TABLE EVERYONES_FARM_FILE;

 DROP SEQUENCE BOARD_SEQ;
 DROP TABLE BOARD;
-- commit;
-- 테이블 drop 잘 됐는지 이상 없는지 꼭 확인 --
-- ======================================================================================== --

-- 파일 관련된 테이블
-- 1. BOARD 테이블 : 모두의 농장 사이트의 게시판 중 파일 업/다운로드 기능을 사용하는 게시판들의 정보를 저장하는 테이블
-- DROP TABLE BOARD;
CREATE TABLE BOARD
(
    BOARD_NO      NUMBER           NOT NULL,        -- 게시판 번호
    BOARD_NAME    VARCHAR2(100)    NULL,            -- 게시판 이름
    CONSTRAINT BOARD_PK PRIMARY KEY (BOARD_NO)      -- 기본키 설정
);

COMMENT ON TABLE BOARD IS '게시판의 코드와 이름을 저장하는 테이블';

COMMENT ON COLUMN BOARD.BOARD_NO IS '게시판 번호';

COMMENT ON COLUMN BOARD.BOARD_NAME IS '게시판 이름';

-- BOARD 테이블의 SEQUENCE
-- DROP SEQUENCE BOARD_SEQ;
CREATE SEQUENCE BOARD_SEQ;

-- commit;

-- 2. EVERYONES_FARM_FILE 테이블: 모두의 농장 사이트에서 업로드된 파일을 저장하는 테이블
-- DROP TABLE EVERYONES_FARM_FILE;
CREATE TABLE EVERYONES_FARM_FILE
(
    FILE_NO         NUMBER           NOT NULL,                  -- 파일 번호
    ORIGIN_NAME     VARCHAR2(300)    NOT NULL,                  -- 파일 원래 이름
    FILE_RENAME     VARCHAR2(300)    NOT NULL,                  -- 파일 저장된 이름
    SAVE_PATH       VARCHAR2(300)    NOT NULL,                  -- 파일 저장된 경로
    IS_THUMBNAIL    NUMBER DEFAULT 0 NOT NULL,                  -- 파일 썸네일 여부 (1= 썸네일이다. 0=아니다.)
    BOARD_NO        NUMBER           NULL,                      -- 파일을 업로드한 게시판 번호
    POST_NO         NUMBER           NULL,                      -- 파일을 업로드한 게시글 번호
    CONSTRAINT EVERYONES_FARM_FILE_PK PRIMARY KEY (FILE_NO)     -- 기본키 제약조건
);

COMMENT ON TABLE EVERYONES_FARM_FILE IS '모두의 농장 사이트의 모든 업로드된 파일을 저장하는 파일 테이블';

COMMENT ON COLUMN EVERYONES_FARM_FILE.FILE_NO IS '파일번호';

COMMENT ON COLUMN EVERYONES_FARM_FILE.ORIGIN_NAME IS '파일 원래 이름';

COMMENT ON COLUMN EVERYONES_FARM_FILE.FILE_RENAME IS '파일 저장된 이름';

COMMENT ON COLUMN EVERYONES_FARM_FILE.SAVE_PATH IS '파일 저장된 경로';

COMMENT ON COLUMN EVERYONES_FARM_FILE.IS_THUMBNAIL IS '썸네일 여부(0 = 썸네일이 아니다, 1= 썸네일이다)';

COMMENT ON COLUMN EVERYONES_FARM_FILE.BOARD_NO IS '게시판 번호';

COMMENT ON COLUMN EVERYONES_FARM_FILE.POST_NO IS '게시글 번호';

ALTER TABLE EVERYONES_FARM_FILE                                             -- BOARD_NO 외래키 제약조건
    ADD CONSTRAINT FK_EVERYONES_FARM_FILE_BOARD_N FOREIGN KEY (BOARD_NO)
        REFERENCES BOARD (BOARD_NO) ON DELETE CASCADE;

-- EVERYONES_FARM_FILE 테이블의 SEQUENCE
-- DROP SEQUENCE EF_FILE_SEQ;
CREATE SEQUENCE EF_FILE_SEQ;

-- 3. 관리자 테이블					
--DROP TABLE ADMIN CASCADE CONSTRAINTS;
-- DROP TABLE ADMIN;
CREATE TABLE ADMIN
(
    ADMIN_NO    NUMBER           NOT NULL,      -- 관리자 번호
    ADMIN_ID    VARCHAR2(20)     NULL,          -- 관리자 아이디
    ADMIN_PW    VARCHAR2(100)    NULL,          -- 관리자 비밀번호
    CONSTRAINT ADMIN_PK PRIMARY KEY (ADMIN_NO)  -- 관리자 기본키 제약조건
);

COMMENT ON TABLE ADMIN IS '관리자 테이블';

COMMENT ON COLUMN ADMIN.ADMIN_NO IS '관리자 번호';

COMMENT ON COLUMN ADMIN.ADMIN_ID IS '관리자 아이디';

COMMENT ON COLUMN ADMIN.ADMIN_PW IS '관리자 비밀번호';

--관리자 테이블 시퀀스 생성
--DROP SEQUENCE admin_seq;
CREATE SEQUENCE admin_seq;

--4. 일반 회원 데이터 정보를 저장하는 테이블(IS_LEAVE, IS_PAUSE default 값은 '0' 로!)		
--DROP TABLE USER_TB;
CREATE TABLE USER_TB
(
    USER_NO           NUMBER                NOT NULL,   -- 사용자 번호
    USER_ID           VARCHAR2(100)         NOT NULL,   -- 사용자 아이디
    USER_PW           VARCHAR2(100)         NOT NULL,   -- 사용자 비밀번호
    USER_NAME         VARCHAR2(100)         NOT NULL,   -- 사용자 이름
    EMAIL             VARCHAR2(150)         NOT NULL,   -- 사용자 이메일
    PHONE             VARCHAR2(14)          NOT NULL,   -- 사용자 전화번호
    IS_LEAVE          NUMBER DEFAULT 0      NOT NULL,   -- 사용자 탈퇴 여부
    IS_PAUSE          NUMBER DEFAULT 0      NOT NULL,   -- 사용자 활동 정지 여부
    ZONECODE          VARCHAR2(7)           NULL,       -- 사용자 우편 번호
    FIRST_ADDRESS     VARCHAR2(300 char)    NULL,       -- 사용자 도로명 주소(첫 번째 주소)
    SECOND_ADDRESS    VARCHAR2(300 char)    NULL,       -- 사용자 상세 주소(두 번째 주소)
    CONSTRAINT USER_TB_PK PRIMARY KEY (USER_NO)         -- 사용자 테이블 기본키 제약 조건
);

COMMENT ON TABLE USER_TB IS '일반 회원 데이터 정보를 저장하는 테이블(IS_LEAVE, IS_PAUSE default 값은 0로!)';

COMMENT ON COLUMN USER_TB.USER_NO IS '일반 회원 번호';

COMMENT ON COLUMN USER_TB.USER_ID IS '일반 회원 아이디';

COMMENT ON COLUMN USER_TB.USER_PW IS '일반 회원 비밀번호';

COMMENT ON COLUMN USER_TB.USER_NAME IS '일반 회원 이름';

COMMENT ON COLUMN USER_TB.EMAIL IS '일반 회원 이메일';

COMMENT ON COLUMN USER_TB.PHONE IS '일반 회원 휴대전화';

COMMENT ON COLUMN USER_TB.IS_LEAVE IS '일반 회원 탈퇴 여부(1=탈퇴, 0= 탈퇴아님)';

COMMENT ON COLUMN USER_TB.IS_PAUSE IS '일반 회원 활동 정지 여부(1=활동정지, 0=활동중)';

COMMENT ON COLUMN USER_TB.ZONECODE IS '우편 번호';

COMMENT ON COLUMN USER_TB.FIRST_ADDRESS IS '주소(도로명)';

COMMENT ON COLUMN USER_TB.SECOND_ADDRESS IS '상세 주소';

-- USER_TB 테이블 시퀀스 생성
--DROP SEQUENCE user_seq;
CREATE SEQUENCE user_seq;
-- COMMIT;
-- 이상 없음

--5. 일반 회원이 프로필 사진을 변경할 때 이미지를 저장하는 테이블 --FK 사용자번호
--DROP TABLE USER_PROFILE;
CREATE TABLE USER_PROFILE
(
    PROFILE_NO     NUMBER           NOT NULL,               -- 사용자 프로필 번호
    USER_NO        NUMBER           NOT NULL,               -- 사용자 번호(FK)
    ORIGIN_NAME    VARCHAR2(300)    NOT NULL,               -- 프로필 원래 이름
    FILE_RENAME    VARCHAR2(300)    NOT NULL,               -- 프로필 저장된 이름
    SAVE_PATH      VARCHAR2(300)    NOT NULL,               -- 프로필 저장된 경로
    CONSTRAINT USER_PROFILE_PK PRIMARY KEY (PROFILE_NO)     -- 사용자 프로필 번호 기본키 제약 조건
);

COMMENT ON TABLE USER_PROFILE IS '일반 회원이 프로필 사진을 변경할 때 이미지를 저장하는 테이블 --FK 사용자번호';

COMMENT ON COLUMN USER_PROFILE.PROFILE_NO IS '프로필 사진 번호';

COMMENT ON COLUMN USER_PROFILE.USER_NO IS '사용자 번호';

COMMENT ON COLUMN USER_PROFILE.ORIGIN_NAME IS '프로필 사진  원래 파일명';

COMMENT ON COLUMN USER_PROFILE.FILE_RENAME IS '프로필 사진  저장 파일명';

COMMENT ON COLUMN USER_PROFILE.SAVE_PATH IS '프로필 사진  저장 경로';

ALTER TABLE USER_PROFILE                                                -- USER_NO 외래키 제약 조건
    ADD CONSTRAINT FK_USER_PROFILE_USER_NO_USER_T FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO) ON DELETE CASCADE;

-- USER_TB 테이블 시퀀스 생성
--DROP SEQUENCE user_profile_seq;
CREATE SEQUENCE user_profile_seq;

-- COMMIT;

--6. 농부 회원 데이터 정보를 저장하는 테이블(IS_CONFIRM, IS_LEAVE, IS_PAUSE default 값은 '0')	
--DROP TABLE FARMER CASCADE CONSTRAINTS;
--DROP TABLE FARMER;
CREATE TABLE FARMER
(
    FARMER_NO         NUMBER                NOT NULL,           -- 농업인 회원 번호
    FARMER_ID         VARCHAR2(20)          NOT NULL,           -- 농업인 아이디
    FARMER_PW         VARCHAR2(100)         NOT NULL,           -- 농업인 비밀번호
    NAME              VARCHAR2(100 char)    NOT NULL,           -- 농업인 이름  
    EMAIL             VARCHAR2(150)         NOT NULL,           -- 농업인 이메일
    PHONE             VARCHAR2(14)          NOT NULL,           -- 농업인 전화 번호
    IS_CONFIRM        NUMBER DEFAULT 0      NOT NULL,           -- 농업인 승인 여부(1= 농업인 회원 승인 완료, 0= 농업인 회원 미승인)
    IS_LEAVE          NUMBER DEFAULT 0      NOT NULL,           -- 농업인 회원 탈퇴 여부(1= 탈퇴, 0= 탈퇴 X)
    IS_PAUSE          NUMBER DEFAULT 0      NOT NULL,           -- 농업인 회원 활동 정지 여부(1= 정지, 0= 정지 X)
    ZONECODE          VARCHAR2(7)           NULL,               -- 농업인 회원 우편 번호
    FIRST_ADDRESS     VARCHAR2(300 char)    NULL,               -- 농업인 회원 도로명 주소(첫 번째 주소)
    SECOND_ADDRESS    VARCHAR2(300 char)    NULL,               -- 농업인 회원 상세 주소(두 번째 주소)
    CONSTRAINT FARMER_PK PRIMARY KEY (FARMER_NO)                -- 농업인 회원 기본키 제약 조건
);

COMMENT ON TABLE FARMER IS '농부 회원 데이터 정보를 저장하는 테이블(IS_CONFIRM, IS_LEAVE, IS_PAUSE default 값은 0)';

COMMENT ON COLUMN FARMER.FARMER_NO IS '농부 회원 번호';

COMMENT ON COLUMN FARMER.FARMER_ID IS '농부 회원 아이디';

COMMENT ON COLUMN FARMER.FARMER_PW IS '농부 회원 비밀번호';

COMMENT ON COLUMN FARMER.NAME IS '농부 회원 이름';

COMMENT ON COLUMN FARMER.EMAIL IS '농부 회원 이메일';

COMMENT ON COLUMN FARMER.PHONE IS '농부 회원 전화번호';

COMMENT ON COLUMN FARMER.IS_CONFIRM IS '농부 회원 승인 여부(1=승인완료, 0=승인보류)';

COMMENT ON COLUMN FARMER.IS_LEAVE IS '농부 회원 탈퇴 여부(1=탈퇴, 0=탈퇴아님)';

COMMENT ON COLUMN FARMER.IS_PAUSE IS '농부 회원 활동 정지 여부(1=활동정지, 0=활동중)';

COMMENT ON COLUMN FARMER.ZONECODE IS '우편 번호';

COMMENT ON COLUMN FARMER.FIRST_ADDRESS IS '주소(도로명)';

COMMENT ON COLUMN FARMER.SECOND_ADDRESS IS '상세 주소';

--농부 회원 데이터 정보를 저장하는 테이블(IS_CONFIRM, IS_LEAVE, IS_PAUSE default 값은 'N')	시퀀스 생성
--DROP SEQUENCE farmer_seq;
CREATE SEQUENCE farmer_seq;

-- 이상 없음

--7. 농장을 등록하는 테이블 -- FK 농업인 사용자 번호(해당 농장의 주인)	
--DROP TABLE FARM CASCADE CONSTRAINTS;
-- DROP TABLE FARM;
CREATE TABLE FARM
(
    FARM_NO           NUMBER                NOT NULL,       -- 농장 번호
    FARM_NAME         VARCHAR2(100 char)    NOT NULL,       -- 농장 이름
    PHONE             VARCHAR2(14)          NOT NULL,       -- 농장 전화 번호
    ZONECODE          VARCHAR2(7)           NOT NULL,       -- 농장 우편 번호
    FIRST_ADDRESS     VARCHAR2(300 char)    NOT NULL,       -- 농장 도로명 주소(첫 번째 주소)
    SECOND_ADDRESS    VARCHAR2(300 char)    NOT NULL,       -- 농장 상세 주소(두 번째 주소)
    INTRODUCE         VARCHAR2(2000)        NOT NULL,       -- 농장 소개
    FARM_REASON       VARCHAR2(2000)        NOT NULL,       -- 농업인 회원이 되고 싶은 이유
    FARM_MIND         VARCHAR2(1000)        NOT NULL,       -- 농부로써 가장 중요하다고 생각하는 것, 길게 작성하지 않을 것 같아서 VARCHAR2(2000) -> VARCHAR2(1000)으로 수정할게요
    FARM_SELL         VARCHAR2(1000)        NOT NULL,       -- 판매하려는 상품 설명
    VISIT             NUMBER                NOT NULL,       -- 농장 페이지 방문 횟수
    FARMER_NO         NUMBER                NOT NULL,       -- 농장주(농업인 회원 번호 - FK)
    CONSTRAINT FARM_PK PRIMARY KEY (FARM_NO)                -- 농장 테이블 기본키 제약 조건
);

COMMENT ON TABLE FARM IS '농장을 등록하는 테이블 -- FK 농업인 사용자 번호(해당 농장의 주인)';

COMMENT ON COLUMN FARM.FARM_NO IS '농장 번호';

COMMENT ON COLUMN FARM.FARM_NAME IS '농장명';

COMMENT ON COLUMN FARM.PHONE IS '농장 전화번호';

COMMENT ON COLUMN FARM.ZONECODE IS '농장 우편 번호';

COMMENT ON COLUMN FARM.FIRST_ADDRESS IS '농장 주소';

COMMENT ON COLUMN FARM.SECOND_ADDRESS IS '농장 상세 주소';

COMMENT ON COLUMN FARM.INTRODUCE IS '농장 소개';

COMMENT ON COLUMN FARM.FARM_REASON IS '농장 신청이유';

COMMENT ON COLUMN FARM.FARM_MIND IS '농장 마인드';

COMMENT ON COLUMN FARM.FARM_SELL IS '판매하려는 상품 설명';

COMMENT ON COLUMN FARM.VISIT IS '방문횟수';

COMMENT ON COLUMN FARM.FARMER_NO IS '농업인 사용자 번호(해당 농장의 주인)';

ALTER TABLE FARM                                                            -- FARMER_NO 외래키 제약조건
    ADD CONSTRAINT FK_FARM_FARMER_NO_FARMER_FARME FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE CASCADE;

--농장을 등록하는 테이블 -- FK 농업인 사용자 번호(해당 농장의 주인)	시퀀스 생성 
--DROP SEQUENCE farm_seq;
CREATE SEQUENCE farm_seq;
-- COMMIT;

--8. 농장 QnA 테이블 -- FK 작성자(사용자 번호) , 농장 번호	
--DROP TABLE FARM_QNA_QUESTION CASCADE CONSTRAINTS;
-- DROP TABLE FARM_QNA_QUESTION;
CREATE TABLE FARM_QNA_QUESTION
(
    FARM_QNA_QUESTION_NO    NUMBER                 NOT NULL,                -- 농장 QNA 질문 번호
    USER_NO                 NUMBER                 NULL,                    -- 질문 작성자(USER_NO - FK)
    FARMER_NO               NUMBER                 NULL,                    -- 질문 작성자(FARMER_NO - FK)
    FARM_NO                 NUMBER                 NOT NULL,                -- 농장 번호(FK)
    TITLE                   VARCHAR2(100 char)     NOT NULL,                -- 질문 제목
    CONTENT                 VARCHAR2(2000 char)    NULL,                    -- 질문 내용
    REG_DATE                DATE DEFAULT sysdate   NOT NULL,                -- 질문 작성일
    HITS                    NUMBER DEFAULT 0       NOT NULL,                -- 조회수
    CONSTRAINT FARM_QNA_QUESTION_PK PRIMARY KEY (FARM_QNA_QUESTION_NO)      -- 농장 QNA 질문 기본키 제약 조건
);

COMMENT ON TABLE FARM_QNA_QUESTION IS '농장 QnA 테이블 -- FK 작성자(사용자 번호), 농장 번호';

COMMENT ON COLUMN FARM_QNA_QUESTION.FARM_QNA_QUESTION_NO IS 'QnA 질문 번호';

COMMENT ON COLUMN FARM_QNA_QUESTION.USER_NO IS '작성자(사용자 번호)';

COMMENT ON COLUMN FARM_QNA_QUESTION.FARMER_NO IS '작성자(농업인 사용자 번호)';

COMMENT ON COLUMN FARM_QNA_QUESTION.FARM_NO IS '농장 번호';

COMMENT ON COLUMN FARM_QNA_QUESTION.TITLE IS '제목';

COMMENT ON COLUMN FARM_QNA_QUESTION.CONTENT IS '내용';

COMMENT ON COLUMN FARM_QNA_QUESTION.REG_DATE IS '작성일자';

COMMENT ON COLUMN FARM_QNA_QUESTION.HITS IS '조회수';

ALTER TABLE FARM_QNA_QUESTION                                               -- 일반 회원 작성자 USER_NO 외래키 제약 조건
    ADD CONSTRAINT FK_FARM_QNA_QUESTION_USER_NO_U FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO) ON DELETE SET NULL;

ALTER TABLE FARM_QNA_QUESTION                                               -- 농장 번호 FARM_NO 외래키 제약 조건
    ADD CONSTRAINT FK_FARM_QNA_QUESTION_FARM_NO_F FOREIGN KEY (FARM_NO)
        REFERENCES FARM (FARM_NO) ON DELETE CASCADE;

ALTER TABLE FARM_QNA_QUESTION                                               -- 농업인 작성자 FARMER_NO 외래키 제약 조건
    ADD CONSTRAINT FK_FARM_QNA_QUESTION_FARMER_NO FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE SET NULL;

--농장 QnA 테이블 -- FK 작성자(사용자 번호) , 농장 번호 시퀀스 생성
--DROP SEQUENCE farm_qna_question_seq;
CREATE SEQUENCE farm_qna_question_seq;

-- 이상 없음
        
--9. 농장 QnA 답변 테이블 -- FK 작성자(사용자 번호) , 농장 번호	
--DROP TABLE FARM_QNA_ANSWER;
CREATE TABLE FARM_QNA_ANSWER
(
    FARM_QNA_ANSWER_NO      NUMBER                 NOT NULL,            -- 답변 번호
    TITLE                   VARCHAR2(100 char)     NOT NULL,            -- 답변 제목
    CONTENT                 VARCHAR2(2000 char)    NOT NULL,            -- 답변 내용
    REG_DATE                DATE DEFAULT sysdate   NOT NULL,            -- 답변 작성일자
    FARMER_NO               NUMBER                 NOT NULL,            -- 답변 작성자(FARMER_NO - FK)
    FARM_QNA_QUESTION_NO    NUMBER                 NULL,                -- 질문 번호(FARM_QNA_QUESTION_NO - FK)
    CONSTRAINT FARM_QNA_ANSWER_PK PRIMARY KEY (FARM_QNA_ANSWER_NO)      -- 답변 기본키 제약 조건
);

COMMENT ON COLUMN FARM_QNA_ANSWER.FARM_QNA_ANSWER_NO IS 'QNA 답변 번호';

COMMENT ON COLUMN FARM_QNA_ANSWER.TITLE IS '답변 제목';

COMMENT ON COLUMN FARM_QNA_ANSWER.CONTENT IS '답변 내용';

COMMENT ON COLUMN FARM_QNA_ANSWER.REG_DATE IS '작성 날짜';

COMMENT ON COLUMN FARM_QNA_ANSWER.FARMER_NO IS '답변 작성자번호';

COMMENT ON COLUMN FARM_QNA_ANSWER.FARM_QNA_QUESTION_NO IS 'QnA 질문 번호';

ALTER TABLE FARM_QNA_ANSWER                                                 -- 답변 작성자 FARMER_NO 외래키 제약 조건
    ADD CONSTRAINT FK_FARM_QNA_ANSWER_FARMER_NO_F FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE CASCADE;

ALTER TABLE FARM_QNA_ANSWER                                                             -- 질문 번호 FARM_QNA_QUESTION_NO 외래키 제약 조건
    ADD CONSTRAINT FK_FARM_QNA_ANSWER_FARM_QNA_QU FOREIGN KEY (FARM_QNA_QUESTION_NO)
        REFERENCES FARM_QNA_QUESTION (FARM_QNA_QUESTION_NO) ON DELETE CASCADE;

--농장 QnA 답변 테이블 -- FK 작성자(사용자 번호) , 농장 번호 시퀀스 생성
--DROP SEQUENCE farm_qna_answer_seq;
CREATE SEQUENCE farm_qna_answer_seq;

-- 이상 없음

--10. 농장 생활에 대한 블로그 형식의 일지 테이블	
--DROP TABLE FARM_DIARY CASCADE CONSTRAINTS;
-- DROP TABLE FARM_DIARY;
CREATE TABLE FARM_DIARY
(
    FARM_DIARY_NO    NUMBER                NOT NULL,        -- 농장 일기 번호
    TITLE            VARCHAR2(200 char)    NOT NULL,        -- 농장 일기 제목
    HITS             NUMBER                NOT NULL,        -- 농장 일기 조회수
    ENROLL_DATE      DATE DEFAULT sysdate  NOT NULL,        -- 농장 일기 등록일
    YOUTUBE_LINK     VARCHAR(300)          NULL,            -- 유튜브 링크
    CONTENT          CLOB                  NOT NULL,        -- 농장 일기 내용
    FARMER_NO        NUMBER                NOT NULL,        -- 농장 일기 작성자 (FARMER_NO - FK)
    CONSTRAINT FARM_DIARY_PK PRIMARY KEY (FARM_DIARY_NO)    -- 농장 일기 기본키 제약조건
);

COMMENT ON TABLE FARM_DIARY IS '농장 생활에 대한 블로그 형식의 일지 테이블';

COMMENT ON COLUMN FARM_DIARY.FARM_DIARY_NO IS '게시물 번호';

COMMENT ON COLUMN FARM_DIARY.TITLE IS '게시물 제목';

COMMENT ON COLUMN FARM_DIARY.HITS IS '조회수';

COMMENT ON COLUMN FARM_DIARY.ENROLL_DATE IS '게시물 등록 날짜';

COMMENT ON COLUMN FARM_DIARY.YOUTUBE_LINK IS '유튜브 링크 주소';

COMMENT ON COLUMN FARM_DIARY.CONTENT IS '게시물 내용';

COMMENT ON COLUMN FARM_DIARY.FARMER_NO IS '농부회원 번호';

ALTER TABLE FARM_DIARY                                                      -- 작성자 FARMER_NO 외래키 제약 조건
    ADD CONSTRAINT FK_FARM_DIARY_FARMER_NO_FARMER FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE CASCADE;

--농장 생활에 대한 블로그 형식의 일지 테이블 시퀀스 생성
--DROP SEQUENCE farm_diary_seq;
CREATE SEQUENCE farm_diary_seq;

--11.  영농일지 정보 테이블 ---FK(작성자)		
--DROP TABLE FARMING_DAILYLOG;
CREATE TABLE FARMING_DAILYLOG
(
    DAILYLOG_NO       NUMBER                NOT NULL,               -- 영농일지 번호
    FARMER_NO         NUMBER                NULL,                   -- 영농일지 작성자 (FARMER_NO -FK)
    WRITE_DATE        DATE                  NOT NULL,               -- 영농일지 작성일자
    CONTENT           VARCHAR2(2000)        NOT NULL,               -- 영농일지 내용
    WORKING_AMOUNT    VARCHAR2(100)         NOT NULL,               -- 영농일지 작업양
    WORKING_TIME      VARCHAR2(20)          NOT NULL,               -- 영농일지 작업 시간
    WORKING_MEMBER    NUMBER                NOT NULL,               -- 영농일지 작업 인원
    WORKING_DATE      VARCHAR2(20)          NOT NULL,               -- 영농일지 작업 일자
    WEATHER           VARCHAR2(100 char)    NOT NULL,               -- 영농일지 날씨
    RAIN              NUMBER(5,1)           NOT NULL,               -- 영농일지 강수량
    MAX_TEMP          NUMBER(3,1)           NOT NULL,               -- 영농일지 최고온도
    MIN_TEMP          NUMBER(3,1)           NOT NULL,               -- 영농일지 최저온도
    CONSTRAINT FARMING_DAILYLOG_PK PRIMARY KEY (DAILYLOG_NO)        -- 영농일지 기본키 제약 조건
);

COMMENT ON TABLE FARMING_DAILYLOG IS '영농일지 정보 테이블 ---FK(작성자)';

COMMENT ON COLUMN FARMING_DAILYLOG.DAILYLOG_NO IS '일지 번호';

COMMENT ON COLUMN FARMING_DAILYLOG.FARMER_NO IS '작성자(회원 번호)';

COMMENT ON COLUMN FARMING_DAILYLOG.WRITE_DATE IS '작성 날짜';

COMMENT ON COLUMN FARMING_DAILYLOG.CONTENT IS '작업 내용';

COMMENT ON COLUMN FARMING_DAILYLOG.WORKING_AMOUNT IS '작업량';

COMMENT ON COLUMN FARMING_DAILYLOG.WORKING_TIME IS '작업 시간';

COMMENT ON COLUMN FARMING_DAILYLOG.WORKING_MEMBER IS '작업 인원';

COMMENT ON COLUMN FARMING_DAILYLOG.WORKING_DATE IS '작업 날짜';

COMMENT ON COLUMN FARMING_DAILYLOG.WEATHER IS '날씨';

COMMENT ON COLUMN FARMING_DAILYLOG.RAIN IS '강수량';

COMMENT ON COLUMN FARMING_DAILYLOG.MAX_TEMP IS '최고 기온';

COMMENT ON COLUMN FARMING_DAILYLOG.MIN_TEMP IS '최저 기온';

ALTER TABLE FARMING_DAILYLOG                                                -- 영농일지 작성자 FARMER_NO 외래키 제약 조건
    ADD CONSTRAINT FK_FARMING_DAILYLOG_FARMER_NO_ FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE CASCADE;

-- 영농일지 정보 테이블 ---FK(작성자) 시퀀스 생성
--DROP SEQUENCE farming_dailylog_seq;
CREATE SEQUENCE farming_dailylog_seq;

-- 이상 없음

--12. 농장의 체험 활동(농장 체험/일손 돕기)에 대한 정보를 저장하는 테이블 --FK(농장 번호)		
--DROP TABLE FARM_ACTIVITY CASCADE CONSTRAINTS;
CREATE TABLE FARM_ACTIVITY
(
    ACTIVITY_NO     NUMBER                NOT NULL,             -- 체험 번호
    FARM_NO         NUMBER                NOT NULL,             -- 체험 주최 농장 (FARM_NO - FK)
    TITLE           VARCHAR2(100 char)    NOT NULL,             -- 체험 제목
    CONTENT         CLOB                  NOT NULL,             -- 체험 내용
    AVAIL_NUMBER    NUMBER                NOT NULL,             -- 체험 가능 인원
    PRICE           NUMBER                NULL,                 -- 체험 가격
    IS_HELP         NUMBER                NOT NULL,             -- 일손돕기 여부(1=일손돕기, 0= 농장 체험)
    CONSTRAINT FARM_ACTIVITY_PK PRIMARY KEY (ACTIVITY_NO)       -- 체험 기본키 제약 조건
);

COMMENT ON TABLE FARM_ACTIVITY IS '농장의 체험 활동(농장 체험/일손 돕기)에 대한 정보를 저장하는 테이블 --FK(농장 번호)';

COMMENT ON COLUMN FARM_ACTIVITY.ACTIVITY_NO IS '체험 번호';

COMMENT ON COLUMN FARM_ACTIVITY.FARM_NO IS '농장 번호';

COMMENT ON COLUMN FARM_ACTIVITY.TITLE IS '체험명';

COMMENT ON COLUMN FARM_ACTIVITY.CONTENT IS '체험 내용';

COMMENT ON COLUMN FARM_ACTIVITY.AVAIL_NUMBER IS '체험 가능 인원';

COMMENT ON COLUMN FARM_ACTIVITY.PRICE IS '요금';

COMMENT ON COLUMN FARM_ACTIVITY.IS_HELP IS '일손돕기 체험인지 여부(1=일손돕기, 0=농장체험)';

ALTER TABLE FARM_ACTIVITY                                               -- 농장 체험 또는 일손 돕기 진행 농장 FARM_NO 외래키 제약 조건
    ADD CONSTRAINT FK_FARM_ACTIVITY_FARM_NO_FARM_ FOREIGN KEY (FARM_NO)
        REFERENCES FARM (FARM_NO) ON DELETE CASCADE ;

--농장의 체험 활동(농장 체험/일손 돕기)에 대한 정보를 저장하는 테이블 --FK(농장 번호)	  시퀀스 생성
--DROP SEQUENCE farm_activity_seq;
CREATE SEQUENCE farm_activity_seq;

-- 이상 없음

-- 13. 체험 하나의 일정을 저장하는 테이블
-- DROP TABLE FARM_ACTIVITY_SCHEDULE;
CREATE TABLE FARM_ACTIVITY_SCHEDULE
(
    SCHEDULE_NO    NUMBER           NOT NULL,                       -- 일정 번호
    ACTIVITY_NO    NUMBER           NULL,                           -- 체험 번호 ACTIVITY_NO - FK
    TIME           VARCHAR2(300)    NULL,                           -- 일정 시간
    CONTENT        VARCHAR2(500)    NULL,                           -- 일정 내용
    ETC            VARCHAR2(500)    NULL,                           -- 일정 기타사항(비고)
    CONSTRAINT FARM_ACTIVITY_SCHEDULE_PK PRIMARY KEY (SCHEDULE_NO)  -- 일정 기본키 제약 조건
);

COMMENT ON COLUMN FARM_ACTIVITY_SCHEDULE.SCHEDULE_NO IS '일정 번호';

COMMENT ON COLUMN FARM_ACTIVITY_SCHEDULE.ACTIVITY_NO IS '체험 번호';

COMMENT ON COLUMN FARM_ACTIVITY_SCHEDULE.TIME IS '체험 시간';

COMMENT ON COLUMN FARM_ACTIVITY_SCHEDULE.CONTENT IS '활동 내용';

COMMENT ON COLUMN FARM_ACTIVITY_SCHEDULE.ETC IS '비고';

ALTER TABLE FARM_ACTIVITY_SCHEDULE                                          -- 해당 체험 번호 ACTIVITY_NO 외래키 제약 조건
    ADD CONSTRAINT FK_FARM_ACTIVITY_SCHEDULE_ACTI FOREIGN KEY (ACTIVITY_NO)
        REFERENCES FARM_ACTIVITY (ACTIVITY_NO) ON DELETE CASCADE;
-- 체험 일정 시퀀스 생성
--DROP SEQUENCE FARM_ACTIVITY_SCHEDULE_SEQ;
CREATE SEQUENCE FARM_ACTIVITY_SCHEDULE_SEQ;

--14. 농장체험/일손돕기신청서(일반인 기준) 정보 테이블  ---FK(작성자,체험번호)		
--DROP TABLE APPLICATION;
CREATE TABLE APPLICATION
(
    APPLICATION_NO     NUMBER                NOT NULL,          -- 신청서 번호
    ACTIVITY_NO        NUMBER                NOT NULL,          -- 신청할 체험 번호 ACTIVITY_NO - FK
    USER_NO            NUMBER                NOT NULL,          -- 신청자 USER_NO - FK
    APPLICANT_NAME     VARCHAR2(100 char)    NOT NULL,          -- 신청자 이름
    APPLICANT_PHONE    VARCHAR2(14)          NOT NULL,          -- 신청자 전화번호
    APPLICANT_EMAIL    VARCHAR2(100)         NOT NULL,          -- 신청자 이메일
    PEOPLE             NUMBER                NOT NULL,          -- 신청 인원 수
    ACTIVITY_DATE      DATE                  NULL,              -- 체험할 신청 날짜
    IS_GROUP           NUMBER DEFAULT 0      NOT NULL,          -- 단체 여부(1= 단체이다, 0= 단체가 아니다)
    IS_APPROVAL        NUMBER DEFAULT 0      NOT NULL,              -- 승인 여부(1= 체험 승인완료, 체험 가능, 0= 체험 미승인, 체험 불가능)
    CONSTRAINT APPLICATION_PK PRIMARY KEY (APPLICATION_NO)      -- 신청서 기본키 제약 조건
);

COMMENT ON TABLE APPLICATION IS '농장체험/일손돕기신청서(일반인 기준) 정보 테이블  ---FK(작성자,체험번호)';

COMMENT ON COLUMN APPLICATION.APPLICATION_NO IS '신청서 번호';

COMMENT ON COLUMN APPLICATION.ACTIVITY_NO IS '체험 번호';

COMMENT ON COLUMN APPLICATION.USER_NO IS '신청자(일반 사용자 번호)';

COMMENT ON COLUMN APPLICATION.APPLICANT_NAME IS '신청자 이름(혹은 대표자 이름)';

COMMENT ON COLUMN APPLICATION.APPLICANT_PHONE IS '신청자 연락처';

COMMENT ON COLUMN APPLICATION.APPLICANT_EMAIL IS '신청자 이메일';

COMMENT ON COLUMN APPLICATION.PEOPLE IS '신청 인원 수';

COMMENT ON COLUMN APPLICATION.ACTIVITY_DATE IS '체험할 날짜';

COMMENT ON COLUMN APPLICATION.IS_GROUP IS '단체 여부(1=단체-10명이상, 0=개인)';

COMMENT ON COLUMN APPLICATION.IS_APPROVAL IS '승인여부(1=신청승인됨, 0=신청보류됨)';

ALTER TABLE APPLICATION                                                     -- 신청자 번호(USER_NO) 외래키 제약 조건
    ADD CONSTRAINT FK_APPLICATION_USER_NO_USER_TB FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO) ON DELETE SET NULL;

ALTER TABLE APPLICATION                                                     -- 신청  체험 번호 ACTIVITY_NO 외래키 제약 조건
    ADD CONSTRAINT FK_APPLICATION_ACTIVITY_NO_FAR FOREIGN KEY (ACTIVITY_NO)
        REFERENCES FARM_ACTIVITY (ACTIVITY_NO) ON DELETE CASCADE;

--농장체험/일손돕기신청서(일반인 기준) 정보 테이블  ---FK(작성자,체험번호) 시퀀스 생성
--DROP SEQUENCE application_seq;
CREATE SEQUENCE application_seq;

-- 이상 없음        

-- 15. 공지사항 정보 테이블					
--DROP TABLE NOTICE;
CREATE TABLE NOTICE
(
    NOTICE_NO    NUMBER                NOT NULL,        -- 공지사항 번호
    TITLE        VARCHAR2(100 char)    NOT NULL,        -- 제목
    CONTENT      VARCHAR2(2000)        NOT NULL,        -- 내용
    ADMIN_NO     NUMBER                NULL,            -- 공지사항 작성자 ADMIN_NO - FK
    REG_DATE     DATE DEFAULT sysdate  NOT NULL,        -- 공지사항 작성일자
    IS_SHOWED    NUMBER DEFAULT 0      NOT NULL,        -- 공지사항 보여줄지 말지(1= 공지사항 페이지에 보여줌, 0= 보여주지 않음)
    CONSTRAINT NOTICE_PK PRIMARY KEY (NOTICE_NO)        -- 공지사항 기본키 제약 조건
);

COMMENT ON TABLE NOTICE IS '공지사항과 자주 묻는 질문 정보 테이블';

COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항 또는  자주 묻는 질문 번호';

COMMENT ON COLUMN NOTICE.TITLE IS '공지사항 또는  자주 묻는 질문 제목';

COMMENT ON COLUMN NOTICE.CONTENT IS '공지사항 또는  자주 묻는 질문 내용';

COMMENT ON COLUMN NOTICE.ADMIN_NO IS '공지사항 작성자';

COMMENT ON COLUMN NOTICE.REG_DATE IS '공지사항 작성일자';

COMMENT ON COLUMN NOTICE.IS_SHOWED IS '공지사항 페이지에 보이게 하기(1=보임, 0= 보이지 않음)';

ALTER TABLE NOTICE                                                          -- 공지사항 작성자 ADMIN_NO 외래키 제약 조건
    ADD CONSTRAINT FK_NOTICE_ADMIN_NO_ADMIN_ADMIN FOREIGN KEY (ADMIN_NO)
        REFERENCES ADMIN (ADMIN_NO) ON DELETE SET NULL;

-- 공지사항과 자주 묻는 질문 정보 테이블 시퀀스 생성
--DROP SEQUENCE notice_seq;
CREATE SEQUENCE notice_seq;

--16. 농업 소식(웹 크롤링한 기사 데이터) 정보 테이블					
--DROP TABLE FARM_NEWS;
CREATE TABLE FARM_NEWS
(
    FARM_NEWS_NO    NUMBER                NOT NULL,         -- 농업 소식 번호
    TITLE           VARCHAR2(100 char)    NOT NULL,         -- 제목
    LINK            VARCHAR2(300)         NOT NULL,         -- 기사 발췌 사이트 URL
    SITE_NAME       VARCHAR2(100 char)    NOT NULL,         -- 기사 발췌 사이트 이름
    REG_DATE        DATE                  NOT NULL,         -- 기사 작성 일자
    CONSTRAINT FARM_NEWS_PK PRIMARY KEY (FARM_NEWS_NO)      -- 농업 소식 기본키 제약조건
);

COMMENT ON TABLE FARM_NEWS IS '농업 소식(웹 크롤링한 기사 데이터) 정보 테이블';

COMMENT ON COLUMN FARM_NEWS.FARM_NEWS_NO IS '농업소식 번호';

COMMENT ON COLUMN FARM_NEWS.TITLE IS '농업소식 제목';

COMMENT ON COLUMN FARM_NEWS.LINK IS '데이터 출처 URL';

COMMENT ON COLUMN FARM_NEWS.SITE_NAME IS '데이터 출처 사이트';

COMMENT ON COLUMN FARM_NEWS.REG_DATE IS '기사 데이터 등록일';

--농업 소식(웹 크롤링한 기사 데이터) 정보 테이블 시퀀스 생성
--DROP SEQUENCE farm_news_seq;
CREATE SEQUENCE farm_news_seq;

-- 이상 없음

--17. 1대1문의 질문 정보 테이블 --FK 작성자(회원 번호)(IS_ANSWERED, IS_FARMER default 값은 '0')		
--DROP TABLE QUESTION_ONEONONE CASCADE CONSTRAINTS;
CREATE TABLE QUESTION_ONEONONE
(
    QUESTION_NO    NUMBER                NOT NULL,                  -- 1대1 질문 번호
    TITLE          VARCHAR2(100 char)    NOT NULL,                  -- 제목
    CONTENT        VARCHAR2(2000)        NOT NULL,                  -- 내용
    USER_NO        NUMBER                NULL,                      -- 작성자(일반 회원 USER_NO - FK)
    FARMER_NO      NUMBER                NULL,                      -- 작성자(농업인 회원 FARMER_NO -FK)
    REG_DATE       DATE DEFAULT sysdate  NOT NULL,                  -- 질문 작성일자
    IS_ANSWERED    NUMBER DEFAULT 0      NOT NULL,                  -- 답변 여부(1= 답변 완료, 0= 미답변)
    CONSTRAINT QUESTION_ONEONONE_PK PRIMARY KEY (QUESTION_NO)       -- 1대1 질문 기본키 제약 조건
);

COMMENT ON TABLE QUESTION_ONEONONE IS '1대1문의 질문 정보 테이블 --FK 작성자(회원 번호)(IS_ANSWERED, IS_FARMER default 값은 0)';

COMMENT ON COLUMN QUESTION_ONEONONE.QUESTION_NO IS '공지사항 또는  자주 묻는 질문 번호';

COMMENT ON COLUMN QUESTION_ONEONONE.TITLE IS '제목';

COMMENT ON COLUMN QUESTION_ONEONONE.CONTENT IS '내용';

COMMENT ON COLUMN QUESTION_ONEONONE.USER_NO IS '작성자(회원 번호)';

COMMENT ON COLUMN QUESTION_ONEONONE.FARMER_NO IS '작성자(농업인 회원 번호)';

COMMENT ON COLUMN QUESTION_ONEONONE.REG_DATE IS '작성일';

COMMENT ON COLUMN QUESTION_ONEONONE.IS_ANSWERED IS '답변여부 (1 = 답변완료, 0 = 미답변)';

ALTER TABLE QUESTION_ONEONONE                                               -- 작성자: 일반 회원 USER_NO -FK
    ADD CONSTRAINT FK_QUESTION_ONEONONE_USER_NO_U FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO) ON DELETE SET NULL;

ALTER TABLE QUESTION_ONEONONE                                               -- 작성자: 농업인 회원 FARMER_NO - FK
    ADD CONSTRAINT FK_QUESTION_ONEONONE_FARMER_NO FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE SET NULL;
        
-- 1대1문의 질문 정보 테이블 --FK 작성자(회원 번호)(IS_ANSWERED, IS_FARMER default 값은 '0') 시퀀스 생성
--DROP SEQUENCE question_oneonone_seq;
CREATE SEQUENCE question_oneonone_seq;

--18. 1대1문의 답변 정보 테이블 --FK 작성자(관리자번호), 질문 번호(IS_FARMER default 값은 '0')			
--DROP TABLE ANSWERED_ONEONONE;
CREATE TABLE ANSWERED_ONEONONE
(
    ANSWERED_NO    NUMBER                NOT NULL,                  -- 1대1문의 답변 번호
    TITLE          VARCHAR2(100 char)    NOT NULL,                  -- 답변 제목
    CONTENT        VARCHAR2(2000)        NOT NULL,                  -- 답변 내용
    ADMIN_NO       NUMBER                NULL,                      -- 답변 작성자(ADMIN_NO - FK)
    REG_DATE       DATE DEFAULT sysdate  NOT NULL,                  -- 답변 작성일자
    QUESTION_NO    NUMBER                NULL,                      -- 질문 번호 (QUESTION_NO -FK)
    CONSTRAINT ANSWERED_ONEONONE_PK PRIMARY KEY (ANSWERED_NO)       -- 1대1문의 답변 기본키 제약 조건
);

COMMENT ON TABLE ANSWERED_ONEONONE IS '1대1문의 답변 정보 테이블 --FK 작성자(관리자번호), 질문 번호(IS_FARMER default 값은 0)';

COMMENT ON COLUMN ANSWERED_ONEONONE.ANSWERED_NO IS '답변 번호';

COMMENT ON COLUMN ANSWERED_ONEONONE.TITLE IS '제목';

COMMENT ON COLUMN ANSWERED_ONEONONE.CONTENT IS '내용';

COMMENT ON COLUMN ANSWERED_ONEONONE.ADMIN_NO IS '작성자(관리자 번호)';

COMMENT ON COLUMN ANSWERED_ONEONONE.REG_DATE IS '작성일';

COMMENT ON COLUMN ANSWERED_ONEONONE.QUESTION_NO IS '질문 번호';

ALTER TABLE ANSWERED_ONEONONE                                               -- 답변 작성자 ADMIN_NO 외래키 제약조건
    ADD CONSTRAINT FK_ANSWERED_ONEONONE_ADMIN_NO_ FOREIGN KEY (ADMIN_NO)
        REFERENCES ADMIN (ADMIN_NO) ON DELETE SET NULL;

ALTER TABLE ANSWERED_ONEONONE                                               -- 질문 번호 QUESTION_NO 외래키 제약조건
    ADD CONSTRAINT FK_ANSWERED_ONEONONE_QUESTION_ FOREIGN KEY (QUESTION_NO)
        REFERENCES QUESTION_ONEONONE (QUESTION_NO) ON DELETE SET NULL;

--1대1문의 답변 정보 테이블 --FK 작성자(관리자번호), 질문 번호(IS_FARMER default 값은 'N') 시퀀스 생성
--DROP SEQUENCE answer_oneonone_seq;
CREATE SEQUENCE answer_oneonone_seq;

--19. 상품의 정보를 저장하는 테이블 --FK 상품을 생산한 농업인 번호(PRODUCT_SAS default 값은 '0')			
--DROP TABLE PRODUCT CASCADE CONSTRAINTS;
-- DROP TABLE PRODUCT;
CREATE TABLE PRODUCT
(
    PRODUCT_NO          NUMBER                NOT NULL,         -- 상품 번호
    NAME                VARCHAR2(100 char)    NOT NULL,         -- 상품 대표 이름
    EXPLAIN             CLOB                  NOT NULL,         -- 상품 상세 설명
    EFFECT              VARCHAR2(300)         NULL,             -- 상품 효능
    FOOD                VARCHAR2(300)         NULL,             -- 상품으로 해먹을 수 있는 음식
    KIND                VARCHAR2(100)         NOT NULL,         -- 상품 종류(EX. 상품 이름이 김농부의 포도 이면 상품 종료는 포도)
    PRODUCT_COUNTRY     VARCHAR2(100)         NOT NULL,         -- 상품 원산지
    FARMER_NO           NUMBER                NOT NULL,         -- 상품 판매자 FARMER_NO - FK
    PRODUCT_SAS         NUMBER DEFAULT 0      NOT NULL,         -- 상품 판매 승인여부(1= 승인완료, 0= 미승인)
    DELIVERY            VARCHAR2(100)         NOT NULL,         -- 상품 배달 방법
    IS_SEASONAL_FOOD    NUMBER DEFAULT 0      NOT NULL,         -- 상품 제철 먹거리 여부(1= 제철 먹거리, 0= 일반 먹거리)
    SALES               NUMBER DEFAULT 0      NOT NULL,         -- 판매량
    CONSTRAINT PRODUCT_PK PRIMARY KEY (PRODUCT_NO)              -- 상품 기본키 제약 조건
);

COMMENT ON TABLE PRODUCT IS '상품의 정보를 저장하는 테이블 --FK 상품을 생산한 농업인 번호(PRODUCT_SAS default 값은 0)';

COMMENT ON COLUMN PRODUCT.PRODUCT_NO IS '상품 번호';

COMMENT ON COLUMN PRODUCT.NAME IS '상품 이름';

COMMENT ON COLUMN PRODUCT.EXPLAIN IS '상품에 대한 상세 설명';

COMMENT ON COLUMN PRODUCT.EFFECT IS '상품에 대한 효능';

COMMENT ON COLUMN PRODUCT.FOOD IS '상품으로 해먹을 수 있는 요리';

COMMENT ON COLUMN PRODUCT.KIND IS '상품의 종류(Ex. 상품 이름이 김농부의 포도이면 상품 종류는 포도 이다)';

COMMENT ON COLUMN PRODUCT.PRODUCT_COUNTRY IS '상품의 원산지';

COMMENT ON COLUMN PRODUCT.FARMER_NO IS '상품을 생산한 농업인 번호';

COMMENT ON COLUMN PRODUCT.PRODUCT_SAS IS '상품 판매 승인여부(1=승인완료를 뜻함, 0= 승인보류)';

COMMENT ON COLUMN PRODUCT.DELIVERY IS '상품 배달 방법';

COMMENT ON COLUMN PRODUCT.IS_SEASONAL_FOOD IS '판매 상품의 제철음식 여부(0=일반음식이라는 뜻, 1=제철음식)';

COMMENT ON COLUMN PRODUCT.SALES IS '판매량(default=0)';

ALTER TABLE PRODUCT                                                       -- 판매 담당자 FARMER_NO 외래키 제약 조건
    ADD CONSTRAINT FK_PRODUCT_FARMER_NO_FARMER_FA FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE CASCADE;

--상품의 정보를 저장하는 테이블 --FK 상품을 생산한 농업인 번호(PRODUCT_SAS default 값은 '0') 시퀀스 생성 
--DROP SEQUENCE product_seq;
CREATE SEQUENCE product_seq;

-- 이상 없음

--20. 판매 상품의 옵션 정보를 저장하는 테이블 -- FK 상품 번호			
--DROP TABLE PRODUCT_OPTION CASCADE CONSTRAINTS;
-- DROP TABLE PRODUCT_OPTION;
CREATE TABLE PRODUCT_OPTION
(
    OPTION_NO          NUMBER                NOT NULL,          -- 옵션 번호
    PRODUCT_NO         NUMBER                NOT NULL,          -- 상품 번호
    NAME               VARCHAR2(100 char)    NOT NULL,          -- 옵션 이름
    PRICE              NUMBER                NOT NULL,          -- 옵션 가격
    AMOUNT             NUMBER                NOT NULL,          -- 옵션 상품의 재고(수량)
    QUALITY            VARCHAR2(10)          NOT NULL,          -- 옵션 상품의 품질(상,중,하)
    EXPIRATION_DATE    DATE                  NOT NULL,          -- 옵션 상품의 유통기한
    CONSTRAINT PRODUCT_OPTION_PK PRIMARY KEY (OPTION_NO)
);

COMMENT ON TABLE PRODUCT_OPTION IS '판매 상품의 옵션 정보를 저장하는 테이블 -- FK 상품 번호';

COMMENT ON COLUMN PRODUCT_OPTION.OPTION_NO IS '옵션 번호';

COMMENT ON COLUMN PRODUCT_OPTION.PRODUCT_NO IS '상품 번호';

COMMENT ON COLUMN PRODUCT_OPTION.NAME IS '옵션 이름(Ex.수박 1KG)';

COMMENT ON COLUMN PRODUCT_OPTION.PRICE IS '옵션 상품의 가격';

COMMENT ON COLUMN PRODUCT_OPTION.AMOUNT IS '옵션 상품의 재고(수량)';

COMMENT ON COLUMN PRODUCT_OPTION.QUALITY IS '옵션 상품의 품질';

COMMENT ON COLUMN PRODUCT_OPTION.EXPIRATION_DATE IS '옵션 상품의 유통기한';

ALTER TABLE PRODUCT_OPTION                                                  -- 상품 번호 PRODUCT_NO 외래키 제약 조건
    ADD CONSTRAINT FK_PRODUCT_OPTION_PRODUCT_NO_P FOREIGN KEY (PRODUCT_NO)
        REFERENCES PRODUCT (PRODUCT_NO) ON DELETE CASCADE;

--판매 상품의 옵션 정보를 저장하는 테이블 -- FK 상품 번호 시퀀스 생성
--DROP SEQUENCE product_option_seq;
CREATE SEQUENCE product_option_seq;

--21. 회원이 상품을 주문한 정보를 저장하는 테이블 -- FK 상품 옵션 번호, 일반 회원 번호			
--DROP TABLE TB_ORDER;
CREATE TABLE TB_ORDER
(
    ORDER_NO          NUMBER                NOT NULL,       -- 주문 번호
    OPTION_NO         NUMBER                NOT NULL,       -- 주문한 옵션 번호
    USER_NO           NUMBER                NULL,           -- 구매자(일반회원 USER_NO -FK)
    FARMER_NO         NUMBER                NULL,           -- 구매자(농업인 회원 FARMER_NO -FK)
    ORDER_DATE        DATE DEFAULT sysdate  NOT NULL,       -- 주문날짜
    PAYMENT_STATUS    NUMBER DEFAULT 0      NOT NULL,       -- 결제 상태(1= 결제완료, 0= 미결제)
    PAYMENT_PRICE     NUMBER                NOT NULL,       -- 결제 금액
    ZONECODE          VARCHAR2(7)           NOT NULL,       -- 우편 번호
    FIRST_ADDRESS     VARCHAR2(300 char)    NOT NULL,       -- 구매자 도로명 주소(첫 번째 주소)
    SECOND_ADDRESS    VARCHAR2(300 char)    NOT NULL,       -- 구매자 상세 주소(두 번째 주소)
    ORDER_AMOUNT      NUMBER                NOT NULL,       -- 주문량( EX. 1개 2개 3개 등)
    CONSTRAINT TB_ORDER_PK PRIMARY KEY (ORDER_NO)           -- 주문 기본키 제약 조건
);

COMMENT ON TABLE TB_ORDER IS '회원이 상품을 주문한 정보를 저장하는 테이블 -- FK 상품 옵션 번호, 일반 회원 번호';

COMMENT ON COLUMN TB_ORDER.ORDER_NO IS '주문 번호';

COMMENT ON COLUMN TB_ORDER.OPTION_NO IS '상품 옵션 번호';

COMMENT ON COLUMN TB_ORDER.USER_NO IS '일반 회원 번호';

COMMENT ON COLUMN TB_ORDER.FARMER_NO IS '농업인 사용자 번호(상품 구매자가 농업인일 경우)';

COMMENT ON COLUMN TB_ORDER.ORDER_DATE IS '주문 날짜';

COMMENT ON COLUMN TB_ORDER.PAYMENT_STATUS IS '결제상태(1=결제완료, 0=결제대기)';

COMMENT ON COLUMN TB_ORDER.PAYMENT_PRICE IS '결제금액';

COMMENT ON COLUMN TB_ORDER.ZONECODE IS '우편 번호';

COMMENT ON COLUMN TB_ORDER.FIRST_ADDRESS IS '주소(도로명)';

COMMENT ON COLUMN TB_ORDER.SECOND_ADDRESS IS '상세 주소';

COMMENT ON COLUMN TB_ORDER.ORDER_AMOUNT IS '주문 수량';

ALTER TABLE TB_ORDER                                                        -- 주문자 ( 일반 회원 USER_NO) 외래키 제약 조건
    ADD CONSTRAINT FK_TB_ORDER_USER_NO_USER_TB_US FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO) ON DELETE SET NULL;

ALTER TABLE TB_ORDER                                                        -- 상품 옵션 번호 (OPTION_NO) 외래키 제약 조건
    ADD CONSTRAINT FK_TB_ORDER_OPTION_NO_PRODUCT_ FOREIGN KEY (OPTION_NO)
        REFERENCES PRODUCT_OPTION (OPTION_NO) ON DELETE SET NULL;

ALTER TABLE TB_ORDER                                                        -- 주문자 (농업인 회원 FARMER_NO) 외래키 제약 조건
    ADD CONSTRAINT FK_TB_ORDER_FARMER_NO_FARMER_F FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE SET NULL;

--회원이 상품을 주문한 정보를 저장하는 테이블 -- FK 상품 옵션 번호, 일반 회원 번호 시퀀스 생성
--DROP SEQUENCE TB_ORDER_seq;
CREATE SEQUENCE TB_ORDER_seq;

-- 이상 없음

--22. 장바구니(회원이 판매 상품을 담아놓는 곳) 정보를 저장하는 테이블 -- FK 상품 번호, 옵션 번호				
--DROP TABLE BASKET;
CREATE TABLE BASKET
(
    BASKET_NO     NUMBER    NOT NULL,                   -- 장바구니 번호
    USER_NO       NUMBER    NULL,                       -- 장바구니 사용자(일반 회원 USER_NO - FK)
    FARMER_NO     NUMBER    NULL,                       -- 장바구니 사용자(농업인 회원 FARMER_NO - FK)
    PRODUCT_NO    NUMBER    NOT NULL,                   -- 장바구니에 담긴 상품 번호 PRODUCT_NO -FK
    OPTION_NO     NUMBER    NOT NULL,                   -- 장바구니에 담긴 옵션 번호 OPTION_NO -FK
    CONSTRAINT BASKET_PK PRIMARY KEY (BASKET_NO)        -- 장바구니 기본키 제약조건
);

COMMENT ON TABLE BASKET IS '장바구니(회원이 판매 상품을 담아놓는 곳) 정보를 저장하는 테이블 -- FK 상품 번호, 옵션 번호';

COMMENT ON COLUMN BASKET.BASKET_NO IS '장바구니 번호';

COMMENT ON COLUMN BASKET.USER_NO IS '사용자 번호';

COMMENT ON COLUMN BASKET.FARMER_NO IS '농업인 사용자 번호(상품 구매자가 농업인일 경우)';

COMMENT ON COLUMN BASKET.PRODUCT_NO IS '상품 번호';

COMMENT ON COLUMN BASKET.OPTION_NO IS '옵션 번호';

ALTER TABLE BASKET                                                          -- 장바구니 사용자(일반 회원) USER_NO 외래키 제약조건
    ADD CONSTRAINT FK_BASKET_USER_NO_USER_TB_USER FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO) ON DELETE CASCADE;

ALTER TABLE BASKET                                                          -- 장바구니에 들어간 상품 PRODUCT_NO 외래키 제약조건
    ADD CONSTRAINT FK_BASKET_PRODUCT_NO_PRODUCT_P FOREIGN KEY (PRODUCT_NO)
        REFERENCES PRODUCT (PRODUCT_NO) ON DELETE CASCADE;

ALTER TABLE BASKET                                                          -- 장바구니에 들어간 옵션 OPTION_NO 외래키 제약조건
    ADD CONSTRAINT FK_BASKET_OPTION_NO_PRODUCT_OP FOREIGN KEY (OPTION_NO)
        REFERENCES PRODUCT_OPTION (OPTION_NO) ON DELETE CASCADE;

ALTER TABLE BASKET                                                          -- 장바구니 사용자 FARMER_NO 외래키 제약조건
    ADD CONSTRAINT FK_BASKET_FARMER_NO_FARMER_FAR FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE CASCADE;

--장바구니(회원이 판매 상품을 담아놓는 곳) 정보를 저장하는 테이블 -- FK 상품 번호, 옵션 번호 시퀀스 생성
--DROP SEQUENCE basket_seq;
CREATE SEQUENCE basket_seq;

--23. 판매자 문의 정보를 저장하는 테이블 -- FK 문의자(사용자) 번호				
--DROP TABLE SELL_QUESTION CASCADE CONSTRAINTS;
-- DROP TABLE SELL_QUESTION;
CREATE TABLE SELL_QUESTION
(
    SELL_QUESTION_NO    NUMBER                NOT NULL,                 -- 상품 문의 글 번호
    PRODUCT_NO          NUMBER                NOT NULL,                 -- 상품 번호 PRODUCT_NO - FK
    TITLE               VARCHAR2(100 char)    NOT NULL,                 -- 문의 제목
    CONTENT             VARCHAR2(2000)        NOT NULL,                 -- 문의 내용
    WRITE_DATE          DATE DEFAULT sysdate  NOT NULL,                 -- 문의 작성일자
    USER_NO             NUMBER                NULL,                     -- 문의 작성자(USER_NO - FK)
    FARMER_NO           NUMBER                NULL,                     -- 문의 작성자(FARMER_NO - FK)
    CONSTRAINT SELL_QUESTION_PK PRIMARY KEY (SELL_QUESTION_NO)          -- 상품 문의 기본키 제약조건
);

COMMENT ON TABLE SELL_QUESTION IS '판매자 문의 정보를 저장하는 테이블 -- FK 문의자(사용자) 번호';

COMMENT ON COLUMN SELL_QUESTION.SELL_QUESTION_NO IS '판매자 문의 번호';

COMMENT ON COLUMN SELL_QUESTION.PRODUCT_NO IS '상품 번호';

COMMENT ON COLUMN SELL_QUESTION.TITLE IS '문의 제목';

COMMENT ON COLUMN SELL_QUESTION.CONTENT IS '문의 내용';

COMMENT ON COLUMN SELL_QUESTION.WRITE_DATE IS '작성 날짜';

COMMENT ON COLUMN SELL_QUESTION.USER_NO IS '문의자(사용자) 번호';

COMMENT ON COLUMN SELL_QUESTION.FARMER_NO IS '문의자(다른 농업인 사용자) 번호';

ALTER TABLE SELL_QUESTION                                                   -- 질문 작성자(USER_NO) 외래키 제약조건
    ADD CONSTRAINT FK_SELL_QUESTION_USER_NO_USER_ FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO) ON DELETE SET NULL;

ALTER TABLE SELL_QUESTION                                                   -- 상품 번호(PRODUCT_NO) 외래키 제약 조건
    ADD CONSTRAINT FK_SELL_QUESTION_PRODUCT_NO_PR FOREIGN KEY (PRODUCT_NO)
        REFERENCES PRODUCT (PRODUCT_NO) ON DELETE CASCADE;

ALTER TABLE SELL_QUESTION                                                   -- 질문 작성자(FARMER_NO) 외래키 제약조건
    ADD CONSTRAINT FK_SELL_QUESTION_FARMER_NO_FAR FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE SET NULL;

--판매자 문의 정보를 저장하는 테이블 -- FK 문의자(사용자) 번호	시퀀스 생성
--DROP SEQUENCE sell_question_seq;
CREATE SEQUENCE sell_question_seq;

--24. 판매자 문의에 대한 답변 댓글 정보를 저장하는 테이블				
--DROP TABLE SELL_ANSWER;
CREATE TABLE SELL_ANSWER
(
    SELL_ANSWER_NO      NUMBER                  NOT NULL,                 -- 상품 문의 답변 번호
    CONTENT             VARCHAR2(2000)          NOT NULL,                 -- 상품 문의 답변 내용
    REG_DATE            DATE DEFAULT sysdate    NOT NULL,                 -- 답변 작성일자
    SELL_QUESTION_NO    NUMBER                  NULL,                     -- 질문 번호 SELL_QUESTION_NO - FK
    FARMER_NO           NUMBER                  NULL,                     -- 답변 작성자 FARMER_NO -FK
    CONSTRAINT SELL_ANSWER_PK PRIMARY KEY (SELL_ANSWER_NO)                -- 상품 문의 기본키 제약조건
);

COMMENT ON TABLE SELL_ANSWER IS '판매자 문의에 대한 답변 댓글 정보를 저장하는 테이블';

COMMENT ON COLUMN SELL_ANSWER.SELL_ANSWER_NO IS '판매자 문의 답변 댓글 번호';

COMMENT ON COLUMN SELL_ANSWER.CONTENT IS '답변 내용';

COMMENT ON COLUMN SELL_ANSWER.REG_DATE IS '작성날짜';

COMMENT ON COLUMN SELL_ANSWER.SELL_QUESTION_NO IS '판매자 문의 번호';

COMMENT ON COLUMN SELL_ANSWER.FARMER_NO IS '답변 작성자';

ALTER TABLE SELL_ANSWER                                                         -- 질문 번호 SELL_QUESTION_NO 외래키 제약조건
    ADD CONSTRAINT FK_SELL_ANSWER_SELL_QUESTION_N FOREIGN KEY (SELL_QUESTION_NO)
        REFERENCES SELL_QUESTION (SELL_QUESTION_NO) ON DELETE SET NULL;
        
ALTER TABLE SELL_ANSWER                                                         -- 답변 작성자 FARMER_NO 외래키 제약 조건
    ADD CONSTRAINT FK_SELL_ANSWER_FARMER_NO_FARME FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE CASCADE;

--판매자 문의에 대한 답변 댓글 정보를 저장하는 테이블 시퀀스 생성
--DROP SEQUENCE sell_answer_seq;
CREATE SEQUENCE sell_answer_seq;

--25. 판매 페이지의 리뷰의 데이터를 저장하는 테이블 --FK 상품번호,회원번호			
--DROP TABLE REVIEW CASCADE CONSTRAINTS;
--DROP TABLE REVIEW;
CREATE TABLE REVIEW
(
    REVIEW_NO       NUMBER                  NOT NULL,         -- 리뷰 번호
    PRODUCT_NO      NUMBER                  NOT NULL,         -- 상품 번호
    CONTENT         VARCHAR2(2000)          NOT NULL,         -- 리뷰 내용
    FARMER_NO       NUMBER                  NULL,             -- 작성자(농업인 회원일 경우 FARMER_NO - FK)
    USER_NO         NUMBER                  NULL,             -- 작성자(일반 회원일 경우 USER_NO - FK)
    REG_DATE        DATE DEFAULT sysdate    NOT NULL,         -- 리뷰 작성일
    REVIEW_SCORE    NUMBER                  NOT NULL,         -- 리뷰 점수
    CONSTRAINT REVIEW_PK PRIMARY KEY (REVIEW_NO)              -- 리뷰 기본키 제약조건
);

COMMENT ON TABLE REVIEW IS '판매 페이지의 리뷰의 데이터를 저장하는 테이블 --FK 상품번호,회원번호';

COMMENT ON COLUMN REVIEW.REVIEW_NO IS '리뷰 번호';

COMMENT ON COLUMN REVIEW.PRODUCT_NO IS '상품 번호';

COMMENT ON COLUMN REVIEW.CONTENT IS '리뷰 내용';

COMMENT ON COLUMN REVIEW.FARMER_NO IS '농업인 사용자 번호(상품 구매자가 농업인일 경우)';

COMMENT ON COLUMN REVIEW.USER_NO IS '회원 번호';

COMMENT ON COLUMN REVIEW.REG_DATE IS '작성일';

COMMENT ON COLUMN REVIEW.REVIEW_SCORE IS '리뷰 점수';

ALTER TABLE REVIEW                                                          -- 상품 번호 PRODUCT_NO 외래키 제약조건    
    ADD CONSTRAINT FK_REVIEW_PRODUCT_NO_PRODUCT_P FOREIGN KEY (PRODUCT_NO)
        REFERENCES PRODUCT (PRODUCT_NO) ON DELETE CASCADE;

ALTER TABLE REVIEW                                                          -- 리뷰 작성자(농업인 회원) FARMER_NO 외래키 제약조건
    ADD CONSTRAINT FK_REVIEW_FARMER_NO_FARMER_FAR FOREIGN KEY (FARMER_NO)
        REFERENCES FARMER (FARMER_NO) ON DELETE SET NULL;

ALTER TABLE REVIEW                                                          -- 리뷰 작성자(일반 회원) USER_NO 외래키 제약조건
    ADD CONSTRAINT FK_REVIEW_USER_NO_USER_TB_USER FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (USER_NO) ON DELETE SET NULL;

--판매 페이지의 리뷰의 데이터를 저장하는 테이블 --FK 상품번호,회원번호 시퀀스 생성
--DROP SEQUENCE review_seq;
CREATE SEQUENCE review_seq;

-- commit; 은 에러 안날 시에만 직접 해주세요!