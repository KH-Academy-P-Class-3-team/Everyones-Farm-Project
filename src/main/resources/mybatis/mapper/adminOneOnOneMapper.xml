<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="ADMINONEONONE">

	<!-- 일반 회원의 문의 글 총 갯수 -->
	<select id="selectCntAllUserOneOnOne" resultType="int" parameterType="java.lang.String">
		select
			count(*)
		from
		    question_oneonone q
		    JOIN
		        user_tb u
		    ON
		        q.user_no = u.user_no
		where
		    q.user_no is not null
		<if test="value != null and value != ''">
		    and (
		        q.title like '%' || #{value} || '%'
		        or u.user_name like '%' || #{value} || '%'
		    )
		</if>
	</select>
	
	
	<!-- 일반 회원 목록 조회 -->
	<resultMap type="hashmap" id="userOneOnOneMap">
		<result property="qOrder" column="q_order" />
		<result property="questionNo" column="question_no" />
		<result property="title" column="title" />
		<result property="userNo" column="user_no" />
		<result property="regDate" column="reg_date" />
		<result property="isAnswered" column="is_answered" />
		<result property="userId" column="user_id" />
	</resultMap>
	<select id="selectAllUserOneOnOneList" parameterType="common.util.AdminPaging" resultMap="userOneOnOneMap">
		select
		    q_paging.*
		from (
		    select
		        rownum q_order
		        , qlist.*
		    from (
		        select
		            q.question_no
		            , q.title
		            , q.user_no
		            , q.reg_date
		            , q.is_answered
		            , u.user_id
		        from
		            question_oneonone q
		            JOIN
		                user_tb u
		            ON
		                q.user_no = u.user_no
		        where
		            q.user_no is not null
		            <if test="search != null and search != ''">
		            and (
		                q.title like '%' || #{search} || '%'
		                or u.user_name like '%' || #{search} || '%'
		            )
		            </if>
		        order by
		            q.question_no desc
		    ) qlist
		)q_paging
		where
		    q_order between #{startNo} and #{endNo}
	</select>

	<!-- 일반회원 문의글 상세 조회 -->
	<resultMap type="hashmap" id="userOneononeDetailMap">
		<result column="question_no" property="questionNo"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="reg_date" property="regDate"/>
		<result column="is_answered" property="isAnswered"/>
		<result column="user_no" property="userNo"/>
		<result column="user_id" property="userId"/>
		<result column="profile_no" property="profileNo"/>
		<result column="origin_name" property="originName"/>
		<result column="file_rename" property="fileRename"/>
		<result column="save_path" property="savePath"/>
	</resultMap>
	<select id="selectUserOneOnOneByNo" parameterType="common.dto.QuestionOneonone" resultMap="userOneononeDetailMap">
		select
		    q_detail.*
		    , up.profile_no
		    , up.origin_name
		    , up.file_rename
		    , up.save_path
		from (
		    select
		        q.question_no
		        , q.title
		        , q.content
		        , q.reg_date
		        , q.is_answered
		        , u.user_no
		        , u.user_id
		    from
		        question_oneonone q
		        JOIN
		            user_tb u
		        ON
		            q.user_no = u.user_no
		    where
		        q.question_no = #{questionNo}
		) q_detail
		    LEFT OUTER JOIN
		        user_profile up
		    ON
		        q_detail.user_no = up.user_no
	</select>

	<!-- 일반 회원 문의 답변  insert -->
	<insert id="insertAnswerToUser" parameterType="common.dto.AnsweredOneonone" >
		insert into
		    answered_oneonone (answered_no, title, content, admin_no, reg_date, question_no)
		values
		    (answer_oneonone_seq.nextval, #{title}, #{content}, #{adminNo}, sysdate, #{questionNo})
	</insert>
	
	<!-- 문의글의 답변 상태 update -->
	<update id="updateAnswerStateByQuestionNo" parameterType="common.dto.AnsweredOneonone">
		update
		    question_oneonone
		set
		    is_answered = 1
		where
		    question_no = #{questionNo}
	</update>
	
	<!-- 답변 조회 -->
	<resultMap type="hashmap" id="answerMap">
		<result property="answeredNo" column="answered_no" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="adminNo" column="admin_no" />
		<result property="regDate" column="reg_date" />
		<result property="questionNo" column="question_no" />
		<result property="adminId" column="admin_id" />
	</resultMap>
	<select id="selectAnswerOneOnOneByQuestionNo" parameterType="common.dto.QuestionOneonone" resultMap="answerMap">
		select
		    answer.*
		    , a.admin_id
		from
		    answered_oneonone answer
		    JOIN
		        admin a
		    ON
		        answer.admin_no = a.admin_no
		where
		    question_no = #{questionNo}
	</select>
	
	<!-- 답변 수정 -->
	<update id="updateAnswertToUser" parameterType="common.dto.AnsweredOneonone" >
		update
		    answered_oneonone
		set
		    title = #{title}
		    , content = #{content}
		where
		    answered_no = #{answeredNo}
	</update>
	
	<!-- 답변 삭제 -->
	<delete id="deleteAnswer" parameterType="common.dto.AnsweredOneonone">
		delete
		    answered_oneonone
		WHERE
		    answered_no = #{answeredNo}
	</delete>
	
	<!-- 답변 상태 답변 대기로 update -->
	<update id="updateWaitAnswerByQuestionNo" parameterType="common.dto.AnsweredOneonone">
		update
		    question_oneonone
		set
		    is_answered = 0
		where
		    question_no = #{questionNo}
	</update>

</mapper>