<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="MYPAGEDAILY">

	<!-- 영농일지 리스트 등록 하기 -->
	<insert id="insertFarmdaily">
		insert into FARMING_DAILYLOG(
			  dailyLog_no
			 ,CONTENT
			 ,WORKING_AMOUNT
			 ,WORKING_TIME
			 ,WORKING_MEMBER
			 ,WORKING_DATE
			 ,WEATHER
			 ,RAIN
			 ,MAX_TEMP
			 ,MIN_TEMP
			 ,WRITE_DATE
			 ,farmer_no
			 )
			 values
			 (
			 	farming_dailylog_seq.nextval
			 	,#{content}
			 	,#{workingAmount}
			 	,#{workingTime}
			 	,#{workingMember}
			 	,#{workingDate}
			 	,#{weather}
			 	,#{rain}
			 	,#{maxTemp}
			 	,#{minTemp}
			 	,to_char(sysdate, 'yyyy-mm-dd')
			 	,#{farmerNo}
				)
	</insert>

	
	<resultMap type="hashmap" id="date">
		<id property="farmerNo" column="farmer_no" />
		<result property="dailylogNo" column="dailyLog_no" />
		<result property="content" column="CONTENT" />
		<result property="workingAmount" column="WORKING_AMOUNT" />
		<result property="workingTime" column="WORKING_TIME" />
		<result property="workingMember" column="WORKING_MEMBER" />
		<result property="writeDate" column="write_date" />
	</resultMap>
	
	<!-- 영농일지 리스트 순차적으로 나오게하기 -->
	<select id="list" resultMap="date">
	select f.farmer_no
	,fd.dailyLog_no,
	fd.content,
	fd.WORKING_AMOUNT,
	fd.WORKING_TIME,
	fd.WORKING_MEMBER,
	fd.write_date
	from farm f , FARMING_DAILYLOG fd  where f.farmer_no = fd.farmer_no and to_char(write_date,'yyyymmdd') = #{date} ORDER BY dailyLog_no
	</select>
	
	<!-- 내일할일 체험명, 신청자이름, 인원 , 체험날짜 승인,체크 -->
	<!-- 영농일지 리스트 페이지 -->
	<select id = "listPage" resultType="common.dto.FarmingDailylog" parameterType="common.dto.page.Criteria">
		select dailyLog_no
			   ,CONTENT
			   ,WORKING_AMOUNT
			   ,WORKING_TIME
			   ,WORKING_MEMBER
			   ,WRITE_DATE
		from (
   		select 
       			dailyLog_no
			   ,CONTENT
			   ,WORKING_AMOUNT
			   ,WORKING_TIME
			   ,WORKING_MEMBER
			   ,WRITE_DATE
			   , row_number() over(order by dailyLog_no desc) as rNum
    	from FARMING_DAILYLOG ) mp
    		where rNum between #{rowStart} and #{rowEnd}
   				 order by dailyLog_no desc
	</select>
	
	<!-- 목록보여지게 하기 -->
	<select id="read" parameterType="int" resultType="common.dto.FarmingDailylog">
		select dailyLog_no
		   ,CONTENT
		   ,WORKING_AMOUNT
		   ,WORKING_TIME
		   ,WORKING_MEMBER
		   ,WEATHER
		    ,WORKING_DATE
		   ,RAIN
		   ,MAX_TEMP
		   ,MIN_TEMP
		   ,WRITE_DATE
		   ,farmer_no
		   from FARMING_DAILYLOG

		   where dailyLog_no = #{dailylogNo}
	</select>
	
	<!-- 영농일지 리스트 총 페이지 수 -->
	<select id="listCount" resultType="int">
	<![CDATA[
		SELECT COUNT(dailyLog_no)
		  FROM FARMING_DAILYLOG
		 WHERE dailyLog_no > 0
	]]>
	</select>
	
	
	<delete id="delete" parameterType ="int">
	  delete from FARMING_DAILYLOG where dailylog_no = #{dailyLogNo}
	
	</delete>
</mapper>